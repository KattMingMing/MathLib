/*! MathLib v0.3.5 MathLib.de | MathLib.de/en/license */
module("MathLib"),test("general",1,function(){equal(typeof MathLib,"object","is MathLib defined")}),test(".abs()",7,function(){equal(MathLib.isNaN(MathLib.abs(NaN)),!0,"Spec. 1: MathLib.abs(NaN) = NaN"),equal(MathLib.isPosZero(MathLib.abs(0)),!0,"Spec. 2: MathLib.abs(+0) = +0"),equal(MathLib.isPosZero(MathLib.abs(0)),!0,"Spec. 3: MathLib.abs(-0) = +0"),equal(MathLib.abs(+Infinity),+Infinity,"Spec. 4: MathLib.abs(+&infin;) = &infin;"),equal(MathLib.abs(-Infinity),+Infinity,"Spec. 5: MathLib.abs(-&infin;) = &infin;"),equal(MathLib.abs(1),1,"Spec. 6: otherwise MathLib.abs(x) = absolute value of x"),equal(MathLib.abs(-1),1,"Spec. 6: otherwise MathLib.abs(x) =  absolute value of x")}),test(".arccos()",8,function(){equal(MathLib.isNaN(MathLib.arccos(NaN)),!0,"Spec. 1: MathLib.arccos(NaN) = NaN"),equal(MathLib.isNaN(MathLib.arccos(+Infinity)),!0,"Spec. 2: MathLib.arccos(x) = NaN if x>1"),equal(MathLib.isNaN(MathLib.arccos(2)),!0,"Spec. 2: MathLib.arccos(x) = NaN if x>1"),equal(MathLib.isNaN(MathLib.arccos(-Infinity)),!0,"Spec. 3: MathLib.arccos(x) = NaN if x<-1"),equal(MathLib.isNaN(MathLib.arccos(-2)),!0,"Spec. 3: MathLib.arccos(x) = NaN if x<-1"),equal(MathLib.arccos(1),0,"Spec. 4: otherwise MathLib.arccos(x) = inverse cosine of x"),equal(MathLib.arccos(0),Math.PI/2,"Spec. 4: otherwise MathLib.arccos(x) = inverse cosine of x"),equal(MathLib.arccos(-1),Math.PI,"Spec. 4: otherwise MathLib.arccos(x) = inverse cosine of x")}),test(".arccot()",5,function(){equal(MathLib.isNaN(MathLib.arccot(NaN)),!0,"Spec. 1: MathLib.arccot(NaN) = NaN"),equal(MathLib.isPosZero(MathLib.arccot(+Infinity)),!0,"Spec. 2: MathLib.arccot(+&infin;) = +0"),equal(MathLib.arccot(-Infinity),Math.PI,"Spec. 3: MathLib.arccot(-&infin;) = &pi;"),equal(MathLib.arccot(1),Math.PI/4,"Spec. 4: otherwise MathLib.arccot(x) = inverse cotangent of x"),equal(MathLib.arccot(0),Math.PI/2,"Spec. 4: otherwise MathLib.arccot(x) = inverse cotangent of x")}),test(".arccot()",3,function(){equal(MathLib.arccot(0),Math.PI/2),equal(MathLib.arccot(1),Math.PI/4),deepEqual(MathLib.arccot(NaN),NaN)}),test(".arccsc()",9,function(){equal(MathLib.isNaN(MathLib.arccsc(NaN)),!0,"Spec. 1: MathLib.arccsc(NaN) = NaN"),equal(MathLib.isNaN(MathLib.arccsc(0)),!0,"Spec. 2: MathLib.arccsc(x) = NaN (if -1<x<1)"),equal(MathLib.isNaN(MathLib.arccsc(0)),!0,"Spec. 2: MathLib.arccsc(x) = NaN (if -1<x<1)"),equal(MathLib.isNaN(MathLib.arccsc(.5)),!0,"Spec. 2: MathLib.arccsc(x) = NaN (if -1<x<1)"),equal(MathLib.isPosZero(MathLib.arccsc(+Infinity)),!0,"Spec. 3: MathLib.arccsc(+&infin;) = +0"),equal(MathLib.isNegZero(MathLib.arccsc(-Infinity)),!0,"Spec. 4: MathLib.arccsc(-&infin;) = -0"),equal(MathLib.arccsc(1),Math.PI/2,"Spec. 5: otherwise MathLib.arccsc(x) = inverse cosecant of x"),equal(MathLib.arccsc(-1),-Math.PI/2,"Spec. 5: otherwise MathLib.arccsc(x) = inverse cosecant of x"),equal(MathLib.arccsc(2),Math.PI/6,"Spec. 5: otherwise MathLib.arccsc(x) = inverse cosecant of x")}),test(".arcosh()",2,function(){equal(MathLib.arcosh(1),0),deepEqual(MathLib.arcosh(NaN),NaN)}),test(".arcoth()",2,function(){equal(MathLib.arcoth(1),Infinity),deepEqual(MathLib.arcoth(NaN),NaN)}),test(".arcsch()",2,function(){equal(MathLib.arcsch(1),.8813735870195429),deepEqual(MathLib.arcsch(NaN),NaN)}),test(".arcsec()",9,function(){equal(MathLib.isNaN(MathLib.arcsec(NaN)),!0,"Spec. 1: MathLib.arcsec(NaN) = NaN"),equal(MathLib.isNaN(MathLib.arcsec(0)),!0,"Spec. 2: MathLib.arcsec(x) = NaN (if -1<x<1)"),equal(MathLib.isNaN(MathLib.arcsec(0)),!0,"Spec. 2: MathLib.arcsec(x) = NaN (if -1<x<1)"),equal(MathLib.isNaN(MathLib.arcsec(.5)),!0,"Spec. 2: MathLib.arcsec(x) = NaN (if -1<x<1)"),equal(MathLib.arcsec(+Infinity),Math.PI/2,"Spec. 3: MathLib.arcsec(+&infin;) = &pi;/2"),equal(MathLib.arcsec(-Infinity),Math.PI/2,"Spec. 4: MathLib.arcsec(-&infin;) = &pi;/2"),equal(MathLib.isPosZero(MathLib.arcsec(1)),!0,"Spec. 5: otherwise MathLib.arcsec(1) = +0"),equal(MathLib.arcsec(-1),Math.PI,"Spec. 6: otherwise MathLib.arcsec(x) = inverse secant of x"),equal(MathLib.arcsec(2),2*Math.PI/6,"Spec. 6: otherwise MathLib.arcsec(x) = inverse secant of x")}),test(".arcsin()",9,function(){equal(MathLib.isNaN(MathLib.arcsin(NaN)),!0,"Spec. 1: MathLib.arcsin(NaN) = NaN"),equal(MathLib.isPosZero(MathLib.arcsin(0)),!0,"Spec. 2: MathLib.arcsin(+0) = +0"),equal(MathLib.isNegZero(MathLib.arcsin(0)),!0,"Spec. 3: MathLib.arcsin(-0) = -0"),equal(MathLib.isNaN(MathLib.arcsin(+Infinity)),!0,"Spec. 4: MathLib.arcsin(x) = NaN if x>1"),equal(MathLib.isNaN(MathLib.arcsin(2)),!0,"Spec. 4: MathLib.arcsin(x) = NaN if x>1"),equal(MathLib.isNaN(MathLib.arcsin(-Infinity)),!0,"Spec. 5: MathLib.arcsin(x) = NaN if x<-1"),equal(MathLib.isNaN(MathLib.arcsin(-2)),!0,"Spec. 5: MathLib.arcsin(x) = NaN if x<-1"),equal(MathLib.arcsin(1),Math.PI/2,"Spec. 6: otherwise MathLib.arcsin(x) = inverse sine of x"),equal(MathLib.arcsin(-1),-Math.PI/2,"Spec. 6: otherwise MathLib.arcsin(x) = inverse sine of x")}),test(".arctan()",7,function(){equal(MathLib.isNaN(MathLib.arctan(NaN)),!0,"Spec. 1: MathLib.arctan(NaN) = NaN"),equal(MathLib.isPosZero(MathLib.arctan(0)),!0,"Spec. 2: MathLib.arctan(+0) = +0"),equal(MathLib.isNegZero(MathLib.arctan(0)),!0,"Spec. 3: MathLib.arctan(-0) = -0"),equal(MathLib.arctan(+Infinity),+Math.PI/2,"Spec. 4: MathLib.arctan(+&infin;) = +&pi;/2"),equal(MathLib.arctan(-Infinity),-Math.PI/2,"Spec. 5: MathLib.arctan(-&infin;) = -&pi;/2"),equal(MathLib.arctan(1),Math.PI/4,"Spec. 6: otherwise MathLib.arctan(x) = inverse tangent of x"),equal(MathLib.arctan(-1),-Math.PI/4,"Spec. 6: otherwise MathLib.arctan(x) = inverse tangent of x")}),test(".arctan2()",24,function(){equal(MathLib.arctan2(0,0),Math.PI,"Spec. 1: arctan2(&plusmn;0, -0) is &plusmn;&pi;"),equal(MathLib.arctan2(0,0),-Math.PI,"Spec. 1: arctan2(&plusmn;0, -0) is &plusmn;&pi;"),equal(MathLib.isPosZero(MathLib.arctan2(0,0)),!0,"Spec. 2: arctan2(&plusmn;0, +0) is &plusmn;0"),equal(MathLib.isNegZero(MathLib.arctan2(0,0)),!0,"Spec. 2: arctan2(&plusmn;0, +0) is &plusmn;0"),equal(MathLib.arctan2(0,-4),Math.PI,"Spec. 3: arctan2(&plusmn;0, x) is &plusmn;&pi; for x<0"),equal(MathLib.arctan2(0,-4),-Math.PI,"Spec. 3: arctan2(&plusmn;0, x) is &plusmn;&pi; for x<0"),equal(MathLib.isPosZero(MathLib.arctan2(0,4)),!0,"Spec. 4: arctan2(&plusmn;0, x) is &plusmn;0 for x>0"),equal(MathLib.isNegZero(MathLib.arctan2(0,4)),!0,"Spec. 4: arctan2(&plusmn;0, x) is &plusmn;0 for x>0"),equal(MathLib.arctan2(-4,0),-Math.PI/2,"Spec. 5: arctan2(y, &plusmn;0) is -&pi;/2 for y < 0"),equal(MathLib.arctan2(-4,0),-Math.PI/2,"Spec. 5: arctan2(y, &plusmn;0) is -&pi;/2 for y < 0"),equal(MathLib.arctan2(4,0),Math.PI/2,"Spec. 6: arctan2(y, &plusmn;0) is +&pi;/2 for y > 0"),equal(MathLib.arctan2(4,0),Math.PI/2,"Spec. 6: arctan2(y, &plusmn;0) is +&pi;/2 for y > 0"),equal(MathLib.arctan2(4,-Infinity),Math.PI,"Spec. 7: arctan2(&plusmn;y, -&infin;) is &plusmn;&pi; for finite y > 0"),equal(MathLib.arctan2(-4,-Infinity),-Math.PI,"Spec. 7: arctan2(&plusmn;y, -&infin;) is &plusmn;&pi; for finite y > 0"),equal(MathLib.isPosZero(MathLib.arctan2(4,Infinity)),!0,"Spec. 8: arctan2(&plusmn;y, +&infin;) is &plusmn;0 for finite y > 0"),equal(MathLib.isNegZero(MathLib.arctan2(-4,Infinity)),!0,"Spec. 8: arctan2(&plusmn;y, +&infin;) is &plusmn;0 for finite y > 0"),equal(MathLib.arctan2(Infinity,4),Math.PI/2,"Spec. 9: arctan2(&plusmn;&infin;, x) is &plusmn;&pi;/2 for finite x"),equal(MathLib.arctan2(-Infinity,4),-Math.PI/2,"Spec. 9: arctan2(&plusmn;&infin;, x) is &plusmn;&pi;/2 for finite x"),equal(MathLib.arctan2(Infinity,-Infinity),.75*Math.PI,"Spec. 10: arctan2(&plusmn;&infin;, -&infin;) is &plusmn;3&pi;/4"),equal(MathLib.arctan2(-Infinity,-Infinity),-3/4*Math.PI,"Spec. 10: arctan2(&plusmn;&infin;, -&infin;) is &plusmn;3&pi;/4"),equal(MathLib.arctan2(Infinity,Infinity),Math.PI/4,"Spec. 11: arctan2(&plusmn;&infin;, +&infin;) is &plusmn;&pi;/4"),equal(MathLib.arctan2(-Infinity,Infinity),-Math.PI/4,"Spec. 11: arctan2(&plusmn;&infin;, +&infin;) is &plusmn;&pi;/4"),equal(MathLib.arctan2(1,1),Math.PI/4,"Spec. 12: otherwise MathLib.arctan2(y, x) = -i ln((x+iy)/sqrt(x^2+y^2)"),equal(MathLib.arctan2(-1,1),-Math.PI/4,"Spec. 12: otherwise MathLib.arctan2(y, x) = -i ln((x+iy)/sqrt(x^2+y^2)")}),test(".arsech()",3,function(){equal(MathLib.arsech(0),Infinity),equal(MathLib.arsech(1),0),deepEqual(MathLib.arsech(NaN),NaN)}),test(".arsinh()",3,function(){equal(MathLib.arsinh(0),0),equal(MathLib.arsinh(1),.8813735870195429),deepEqual(MathLib.arsinh(NaN),NaN)}),test(".artanh()",3,function(){equal(MathLib.artanh(0),0),equal(MathLib.artanh(1),Infinity),deepEqual(MathLib.artanh(NaN),NaN)}),test(".binomial()",4,function(){equal(MathLib.binomial(0,0),1),equal(MathLib.binomial(6,3),20),equal(MathLib.binomial(2,4),0),equal(MathLib.binomial(-4,3),-20)}),test(".cbrt()",7,function(){equal(MathLib.isNaN(MathLib.cbrt(NaN)),!0,"Spec. 1: MathLib.cbrt(NaN) = NaN"),equal(MathLib.isPosZero(MathLib.cbrt(0)),!0,"Spec. 2: MathLib.cbrt(+0) = +0"),equal(MathLib.isNegZero(MathLib.cbrt(0)),!0,"Spec. 3: MathLib.cbrt(-0) = -0"),equal(MathLib.cbrt(+Infinity),+Infinity,"Spec. 4: MathLib.cbrt(+&infin;) = +&infin;"),equal(MathLib.cbrt(-Infinity),-Infinity,"Spec. 5: MathLib.cbrt(-&infin;) = -&infin;"),equal(MathLib.cbrt(8),2,"Spec. 6: otherwise MathLib.cbrt(x) = cube root of x"),equal(MathLib.cbrt(-8),-2,"Spec. 6: otherwise MathLib.cbrt(x) = cube root of x")}),test(".ceil()",7,function(){equal(MathLib.isNaN(MathLib.ceil(NaN)),!0,"Spec. 1: MathLib.ceil(NaN) = NaN"),equal(MathLib.isPosZero(MathLib.ceil(0)),!0,"Spec. 2: MathLib.ceil(+0) = +0"),equal(MathLib.isNegZero(MathLib.ceil(0)),!0,"Spec. 3: MathLib.ceil(-0) = -0"),equal(MathLib.ceil(+Infinity),+Infinity,"Spec. 4: MathLib.ceil(+&infin;) = +&infin;"),equal(MathLib.ceil(-Infinity),-Infinity,"Spec. 5: MathLib.ceil(-&infin;) = -&infin;"),equal(MathLib.ceil(2.2),3,"Spec. 6: otherwise MathLib.ceil(x) =  ⎡x⎤"),equal(MathLib.ceil(-2.2),-2,"Spec. 6: otherwise MathLib.ceil(x) = ⎡x⎤")}),test(".compare()",3,function(){equal(MathLib.compare(12,12),0),equal(MathLib.compare(1,2),-1),equal(MathLib.compare(23,MathLib.complex([3,4])),1)}),test(".cos()",6,function(){equal(MathLib.isNaN(MathLib.cos(NaN)),!0,"Spec. 1: MathLib.cos(NaN) = NaN"),equal(MathLib.isNaN(MathLib.cos(+Infinity)),!0,"Spec. 2: MathLib.cos(+&infin;) = NaN"),equal(MathLib.isNaN(MathLib.cos(-Infinity)),!0,"Spec. 3: MathLib.cos(-&infin;) = NaN"),equal(MathLib.cos(0),1,"Spec. 4: otherwise MathLib.cos(x) = cosine of x"),equal(MathLib.cos(0),1,"Spec. 4: otherwise MathLib.cos(x) = cosine of x"),equal(MathLib.cos(Math.PI),-1,"Spec. 4: otherwise MathLib.cos(x) = cosine of x")}),test(".cot()",7,function(){equal(MathLib.isNaN(MathLib.cot(NaN)),!0,"Spec. 1: MathLib.cot(NaN) = NaN"),equal(MathLib.cot(0),Infinity,"Spec. 2: MathLib.cot(+0) = +&infin;"),equal(MathLib.cot(0),-Infinity,"Spec. 3: MathLib.cot(-0) = -&infin;"),equal(MathLib.isNaN(MathLib.cot(+Infinity)),!0,"Spec. 4: MathLib.cot(+&infin;) = NaN"),equal(MathLib.isNaN(MathLib.cot(-Infinity)),!0,"Spec. 5: MathLib.cot(-&infin;) = NaN"),equal(MathLib.cot(Math.PI/3),1/Math.sqrt(3),"Spec. 6: otherwise MathLib.cot(x) = cotangent of x"),equal(MathLib.cot(Math.PI/2),0,"Spec. 6: otherwise MathLib.cot(x) = cotangent of x")}),test(".csc()",7,function(){equal(MathLib.isNaN(MathLib.csc(NaN)),!0,"Spec. 1: MathLib.csc(NaN) = NaN"),equal(MathLib.csc(0),+Infinity,"Spec. 2: MathLib.csc(+0) = +&infin;"),equal(MathLib.csc(0),-Infinity,"Spec. 3: MathLib.csc(-0) = -&infin;"),equal(MathLib.isNaN(MathLib.csc(+Infinity)),!0,"Spec. 4: MathLib.csc(+&infin;) = NaN"),equal(MathLib.isNaN(MathLib.csc(-Infinity)),!0,"Spec. 5: MathLib.csc(-&infin;) = NaN"),equal(MathLib.csc(Math.PI/2),1,"Spec. 6: otherwise MathLib.csc(x) = cosecant of x"),equal(MathLib.csc(-Math.PI/2),-1,"Spec. 6: otherwise MathLib.csc(x) = cosecant of x")}),test(".degToRad()",7,function(){equal(MathLib.isNaN(MathLib.degToRad(NaN)),!0,"Spec. 1: MathLib.degToRad(NaN) = NaN"),equal(MathLib.isPosZero(MathLib.degToRad(0)),!0,"Spec. 2: MathLib.degToRad(+0) = +0"),equal(MathLib.isNegZero(MathLib.degToRad(0)),!0,"Spec. 3: MathLib.degToRad(-0) = -0"),equal(MathLib.degToRad(+Infinity),Infinity,"Spec. 4: MathLib.degToRad(+&infin;) = +&infin;"),equal(MathLib.degToRad(-Infinity),-Infinity,"Spec. 5: MathLib.degToRad(-&infin;) = -&infin;"),equal(MathLib.degToRad(90),Math.PI/2,"Spec. 6: otherwise MathLib.degToRad(x) = x * π/180"),equal(MathLib.degToRad(180),Math.PI,"Spec. 6: otherwise MathLib.degToRad(x) = x * π/180")}),test(".exp()",6,function(){equal(MathLib.isNaN(MathLib.exp(NaN)),!0,"Spec. 1: MathLib.exp(NaN) = NaN"),equal(MathLib.exp(+Infinity),+Infinity,"Spec. 2: MathLib.exp(+&infin;) = +&infin;"),equal(MathLib.isPosZero(MathLib.exp(-Infinity)),!0,"Spec. 3: MathLib.exp(-&infin;) = 0"),equal(MathLib.exp(0),1,"Spec. 4: otherwise MathLib.exp(x) = e^x"),equal(MathLib.exp(0),1,"Spec. 4: otherwise MathLib.exp(x) = e^x"),equal(MathLib.exp(1),Math.E,"Spec. 4: otherwise MathLib.exp(x) = e^x")}),test(".factor()",2,function(){deepEqual(MathLib.factor(12),MathLib.set([2,2,3],!0)),deepEqual(MathLib.factor(-15),MathLib.set([3,5],!0))}),test(".factorial()",1,function(){equal(MathLib.factorial(6),720)}),test(".fallingFactorial()",4,function(){equal(MathLib.fallingFactorial(2,0),1),equal(MathLib.fallingFactorial(6,3),120),equal(MathLib.fallingFactorial(2,4),0),equal(MathLib.fallingFactorial(4,3,.5),42)}),test(".fibonacci()",1,function(){equal(MathLib.fibonacci(4),3,"Is the fourth fibonacci number 3?")}),test(".floor()",7,function(){equal(MathLib.isNaN(MathLib.floor(NaN)),!0,"Spec. 1: MathLib.floor(NaN) = NaN"),equal(MathLib.isPosZero(MathLib.floor(0)),!0,"Spec. 2: MathLib.floor(+0) = +0"),equal(MathLib.isNegZero(MathLib.floor(0)),!0,"Spec. 3: MathLib.floor(-0) = -0"),equal(MathLib.floor(+Infinity),+Infinity,"Spec. 4: MathLib.floor(+&infin;) = +&infin;"),equal(MathLib.floor(-Infinity),-Infinity,"Spec. 5: MathLib.floor(-&infin;) = -&infin;"),equal(MathLib.floor(2.2),2,"Spec. 6: otherwise MathLib.floor(x) =  ⎣x⎦"),equal(MathLib.floor(-2.2),-3,"Spec. 6: otherwise MathLib.floor(x) = ⎣x⎦")}),test(".hypot()",16,function(){equal(MathLib.hypot(+Infinity,NaN),Infinity,"Spec. 1: MathLib.hypot(x, y, ...) = +&infin; if any argument is infinite"),equal(MathLib.hypot(NaN,+Infinity),Infinity,"Spec. 1: MathLib.hypot(x, y, ...) = +&infin; if any argument is infinite"),equal(MathLib.hypot(-Infinity,NaN),Infinity,"Spec. 1: MathLib.hypot(x, y, ...) = +&infin; if any argument is infinite"),equal(MathLib.hypot(NaN,-Infinity),Infinity,"Spec. 1: MathLib.hypot(x, y, ...) = +&infin; if any argument is infinite"),equal(MathLib.hypot(+Infinity,2),Infinity,"Spec. 1: MathLib.hypot(x, y, ...) = +&infin; if any argument is infinite"),equal(MathLib.hypot(2,+Infinity),Infinity,"Spec. 1: MathLib.hypot(x, y, ...) = +&infin; if any argument is infinite"),equal(MathLib.hypot(-Infinity,2),Infinity,"Spec. 1: MathLib.hypot(x, y, ...) = +&infin; if any argument is infinite"),equal(MathLib.hypot(2,-Infinity),Infinity,"Spec. 1: MathLib.hypot(x, y, ...) = +&infin; if any argument is infinite"),equal(MathLib.isNaN(MathLib.hypot(NaN,2)),!0,"Spec. 2: MathLib.hypot(x, y, ...) = NaN if any argument is NaN, and none infinite"),equal(MathLib.isNaN(MathLib.hypot(2,NaN)),!0,"Spec. 2: MathLib.hypot(x, y, ...) = NaN if any argument is NaN, and none infinite"),equal(MathLib.isPosZero(MathLib.hypot(0,0)),!0,"Spec. 3: MathLib.hypot(x, y, ...) = +0 if all arguments are &plusmn;0"),equal(MathLib.isPosZero(MathLib.hypot(0,0)),!0,"Spec. 3:MathLib.hypot(x, y, ...) = +0 if all arguments are &plusmn;0"),equal(MathLib.isEqual(MathLib.hypot(3),3),!0,"Spec. 4: Otherwise MathLib.hypot(x, y, ...) = the square root of the sum of the squared arguments"),equal(MathLib.isEqual(MathLib.hypot(-3),3),!0,"Spec. 4: Otherwise MathLib.hypot(x, y, ...) = the square root of the sum of the squared arguments"),equal(MathLib.isEqual(MathLib.hypot(3,4),5),!0,"Spec. 4: Otherwise MathLib.hypot(x, y, ...) = the square root of the sum of the squared arguments"),equal(MathLib.isEqual(MathLib.hypot(3,4,12),13),!0,"Spec. 4: Otherwise MathLib.hypot(x, y, ...) = the square root of the sum of the squared arguments")}),test(".hypot2()",6,function(){equal(MathLib.isEqual(MathLib.hypot2(3,4),25),!0),equal(MathLib.isEqual(MathLib.hypot2(3,4,12),169),!0),deepEqual(MathLib.hypot2(NaN,4),NaN),equal(MathLib.hypot2(NaN,Infinity),Infinity),equal(MathLib.hypot2(-Infinity,NaN),Infinity),equal(MathLib.hypot2(Infinity,4),Infinity)}),test(".inverse()",2,function(){equal(MathLib.inverse(2),.5,"MathLib.inverse(2) should be 0.5"),equal(MathLib.isNaN(MathLib.inverse(NaN)),!0,"MathLib.inverse(NaN) should be NaN")}),test(".is()",13,function(){var a=MathLib.point([1,2,3]),b=MathLib.vector([1,2,3]);equal(MathLib.is(2,"number"),!0),equal(MathLib.is(a,"point"),!0),equal(MathLib.is(a,"vector"),!0),equal(MathLib.is(a,"array"),!0),equal(MathLib.is(a,"object"),!0),equal(MathLib.is(a,"line"),!1),equal(MathLib.is(b,"vector"),!0),equal(MathLib.is(b,"point"),!1),equal(MathLib.is([],"array"),!0),equal(MathLib.is(function(){},"function"),!0),equal(MathLib.is({},"null"),!1),equal(MathLib.is(null,"null"),!0),equal(MathLib.is(undefined,"undefined"),!0)}),test(".isFinite()",4,function(){equal(MathLib.isFinite(2),!0),equal(MathLib.isFinite(NaN),!1),equal(MathLib.isFinite(+Infinity),!1),equal(MathLib.isFinite(-Infinity),!1)}),test(".isInt()",2,function(){equal(MathLib.isInt(2),!0),equal(MathLib.isInt(2.5),!1)}),test(".isNaN()",2,function(){equal(MathLib.isNaN(NaN),!0),equal(MathLib.isNaN(2),!1)}),test(".isNegZero()",2,function(){equal(MathLib.isNegZero(0),!0),equal(MathLib.isNegZero(0),!1)}),test(".isOne()",2,function(){equal(MathLib.isOne(1),!0),equal(MathLib.isOne(2),!1)}),test(".isPosZero()",2,function(){equal(MathLib.isPosZero(0),!0),equal(MathLib.isPosZero(0),!1)}),test(".isPrime()",2,function(){equal(MathLib.isPrime(4567),!0),equal(MathLib.isPrime(112),!1)}),test(".isZero()",2,function(){equal(MathLib.isZero(0),!0),equal(MathLib.isZero(1),!1)}),test(".ln()",8,function(){equal(MathLib.ln(1),0,"MathLib.ln(1) should be 0"),equal(MathLib.ln(Math.E),1,"MathLib.ln(Math.E) should be 1"),equal(MathLib.ln(+Infinity),+Infinity,"MathLib.ln(+Infinity) should be +Infinity"),equal(MathLib.ln(0),-Infinity,"MathLib.ln(+0) should be -Infinity"),equal(MathLib.ln(0),-Infinity,"MathLib.ln(-0) should be -Infinity"),equal(MathLib.isNaN(MathLib.ln(-4)),!0,"MathLib.ln(-4) should be NaN"),equal(MathLib.isNaN(MathLib.ln(-Infinity)),!0,"MathLib.ln(-Infinity) should be NaN"),equal(MathLib.isNaN(MathLib.ln(NaN)),!0,"MathLib.ln(NaN) should be NaN")}),test(".max()",2,function(){equal(MathLib.max([1,42,17,4]),42),equal(MathLib.max([1,42,17,4],2),17)}),test(".plus()",2,function(){equal(MathLib.plus(1,2),3),deepEqual(MathLib.plus(MathLib.matrix.identity(3),MathLib.matrix.identity(3)),MathLib.matrix([[2,0,0],[0,2,0],[0,0,2]]))}),test("pow()",65,function(){equal(MathLib.pow(1,0),1,"Spec. 1: MathLib.pow (x, &plusmn;0) = 1 (for any x, even a zero, NaN, or &plusmn;&infin;)"),equal(MathLib.pow(0,0),1,"Spec. 1: MathLib.pow (x, &plusmn;0) = 1 (for any x, even a zero, NaN, or &plusmn;&infin;)"),equal(MathLib.pow(0,0),1,"Spec. 1: MathLib.pow (x, &plusmn;0) = 1 (for any x, even a zero, NaN, or &plusmn;&infin;)"),equal(MathLib.pow(NaN,0),1,"Spec. 1: MathLib.pow (x, &plusmn;0) = 1 (for any x, even a zero, NaN, or &plusmn;&infin;)"),equal(MathLib.pow(Infinity,0),1,"Spec. 1: MathLib.pow (x, &plusmn;0) = 1 (for any x, even a zero, NaN, or &plusmn;&infin;)"),equal(MathLib.pow(-Infinity,0),1,"Spec. 1: MathLib.pow (x, &plusmn;0) = 1 (for any x, even a zero, NaN, or &plusmn;&infin;)"),equal(MathLib.pow(1,0),1,"Spec. 1: MathLib.pow (x, &plusmn;0) = 1 (for any x, even a zero, NaN, or &plusmn;&infin;)"),equal(MathLib.pow(0,0),1,"Spec. 1: MathLib.pow (x, &plusmn;0) = 1 (for any x, even a zero, NaN, or &plusmn;&infin;)"),equal(MathLib.pow(0,0),1,"Spec. 1: MathLib.pow (x, &plusmn;0) = 1 (for any x, even a zero, NaN, or &plusmn;&infin;)"),equal(MathLib.pow(NaN,0),1,"Spec. 1: MathLib.pow (x, &plusmn;0) = 1 (for any x, even a zero, NaN, or &plusmn;&infin;)"),equal(MathLib.pow(Infinity,0),1,"Spec. 1: MathLib.pow (x, &plusmn;0) = 1 (for any x, even a zero, NaN, or &plusmn;&infin;)"),equal(MathLib.pow(-Infinity,0),1,"Spec. 1: MathLib.pow (x, &plusmn;0) = 1 (for any x, even a zero, NaN, or &plusmn;&infin;)"),equal(MathLib.pow(0,-5),+Infinity,"Spec. 2: MathLib.pow (&plusmn;0, y) = &plusmn;&infin; (for y an odd integer < 0)"),equal(MathLib.pow(0,-5),-Infinity,"Spec. 2: MathLib.pow (&plusmn;0, y) = &plusmn;&infin; (for y an odd integer < 0)"),equal(MathLib.pow(0,-Infinity),Infinity,"Spec. 3: MathLib.pow(&plusmn;0, -&infin;) = +&infin;"),equal(MathLib.pow(0,-Infinity),Infinity,"Spec. 3: MathLib.pow(&plusmn;0, -&infin;) = +&infin;"),equal(MathLib.isPosZero(MathLib.pow(0,Infinity)),!0,"Spec. 4: MathLib.pow(&plusmn;0, +&infin;) = +0"),equal(MathLib.isPosZero(MathLib.pow(0,Infinity)),!0,"Spec. 4: MathLib.pow(&plusmn;0, +&infin;) = +0"),equal(MathLib.pow(0,-4),+Infinity,"Spec. 5: MathLib.pow (&plusmn;0, y) = +&infin; (for finite y < 0 and not an odd integer)"),equal(MathLib.pow(0,-4),+Infinity,"Spec. 5: MathLib.pow (&plusmn;0, y) = +&infin; (for finite y < 0 and not an odd integer)"),equal(MathLib.pow(0,-5.5),+Infinity,"Spec. 5: MathLib.pow (&plusmn;0, y) = +&infin; (for finite y < 0 and not an odd integer)"),equal(MathLib.pow(0,-5.5),+Infinity,"Spec. 5: MathLib.pow (&plusmn;0, y) = +&infin; (for finite y < 0 and not an odd integer)"),equal(MathLib.isPosZero(MathLib.pow(0,5)),!0,"Spec. 6: MathLib.pow (&plusmn;0, y) = &plusmn;0 (for finite y > 0 an odd integer)"),equal(MathLib.isNegZero(MathLib.pow(0,5)),!0,"Spec. 6: MathLib.pow (&plusmn;0, y) = &plusmn;0 (for finite y > 0 an odd integer)"),equal(MathLib.isPosZero(MathLib.pow(0,4)),!0,"Spec. 7: MathLib.pow (&plusmn;0, y) = +0 (for finite y > 0 and not an odd integer)"),equal(MathLib.isPosZero(MathLib.pow(0,4)),!0,"Spec. 7: MathLib.pow (&plusmn;0, y) = +0 (for finite y > 0 and not an odd integer)"),equal(MathLib.isPosZero(MathLib.pow(0,5.5)),!0,"Spec. 7: MathLib.pow (&plusmn;0, y) = +0 (for finite y > 0 and not an odd integer)"),equal(MathLib.isPosZero(MathLib.pow(0,5.5)),!0,"Spec. 7: MathLib.pow (&plusmn;0, y) = +0 (for finite y > 0 and not an odd integer)"),equal(MathLib.pow(-1,+Infinity),1,"Spec. 8: MathLib.pow(-1, &plusmn;&infin;) = 1"),equal(MathLib.pow(-1,-Infinity),1,"Spec. 8: MathLib.pow(-1, &plusmn;&infin;) = 1"),equal(MathLib.pow(1,2),1,"Spec. 9: MathLib.pow(+1, y) = 1 (for any y, even &plusmn;&infin; and NaN)"),equal(MathLib.pow(1,-2),1,"Spec. 9: MathLib.pow(+1, y) = 1 (for any y, even &plusmn;&infin; and NaN)"),equal(MathLib.pow(1,+Infinity),1,"Spec. 9: MathLib.pow(+1, y) = 1 (for any y, even &plusmn;&infin; and NaN)"),equal(MathLib.pow(1,-Infinity),1,"Spec. 9: MathLib.pow(+1, y) = 1 (for any y, even &plusmn;&infin; and NaN)"),equal(MathLib.pow(1,NaN),1,"Spec. 9: MathLib.pow(+1, y) = 1 (for any y, even &plusmn;&infin; and NaN)"),equal(MathLib.isNaN(MathLib.pow(-2,2.5)),!0,"Spec. 10: MathLib.pow (x, y) = NaN (for finite x < 0 and finite non-integer y.)"),equal(MathLib.isNaN(MathLib.pow(-2,2.5)),!0,"Spec. 10: MathLib.pow (x, y) = NaN (for finite x < 0 and finite non-integer y.)"),equal(MathLib.pow(3,Infinity),Infinity,"Spec. 11: MathLib.pow(x, +&infin;) = +&infin; (for |x| > 1)"),equal(MathLib.pow(-3,Infinity),Infinity,"Spec. 11: MathLib.pow(x, +&infin;) = +&infin; (for |x| > 1)"),equal(MathLib.isPosZero(MathLib.pow(3,-Infinity)),!0,"Spec. 12: MathLib.pow(x, -&infin;) = +0 (for |x| > 1)"),equal(MathLib.isPosZero(MathLib.pow(-3,-Infinity)),!0,"Spec. 12: MathLib.pow(x, -&infin;) = +0 (for |x| > 1)"),equal(MathLib.isPosZero(MathLib.pow(.5,+Infinity)),!0,"Spec. 13: MathLib.pow(x, +&infin;) = +0 (for |x| < 1)"),equal(MathLib.isPosZero(MathLib.pow(-0.5,+Infinity)),!0,"Spec. 13: MathLib.pow(x, +&infin;) = +0 (for |x| < 1)"),equal(MathLib.pow(.5,-Infinity),Infinity,"Spec. 14: MathLib.pow(x, -&infin;) = +&infin; (for |x| < 1)"),equal(MathLib.pow(-0.5,-Infinity),Infinity,"Spec. 14: MathLib.pow(x, -&infin;) = +&infin; (for |x| < 1)"),equal(MathLib.pow(+Infinity,2),Infinity,"Spec. 15: MathLib.pow(+&infin;, y) = +&infin; (for y > 0)"),equal(MathLib.pow(+Infinity,2),Infinity,"Spec. 15: MathLib.pow(+&infin;, y) = +&infin; (for y > 0)"),equal(MathLib.isPosZero(MathLib.pow(+Infinity,-2)),!0,"Spec. 16: MathLib.pow(+&infin;, y) = +0 (for y < 0)"),equal(MathLib.isPosZero(MathLib.pow(+Infinity,-Infinity)),!0,"Spec. 16: MathLib.pow(+&infin;, y) = +0 (for y < 0)"),equal(MathLib.pow(-Infinity,2),Infinity,"Spec. 17: MathLib.pow(-&infin;, y) = MathLib.pow(-0, -y)"),equal(MathLib.pow(-Infinity,0),1,"Spec. 17: MathLib.pow(-&infin;, y) = MathLib.pow(-0, -y)"),equal(MathLib.pow(-Infinity,0),1,"Spec. 17: MathLib.pow(-&infin;, y) = MathLib.pow(-0, -y)"),equal(MathLib.pow(-Infinity,Infinity),Infinity,"Spec. 17: MathLib.pow(-&infin;, y) = MathLib.pow(-0, -y)"),equal(MathLib.pow(-Infinity,-Infinity),0,"Spec. 17: MathLib.pow(-&infin;, y) = MathLib.pow(-0, -y)"),equal(MathLib.isNaN(MathLib.pow(NaN,1)),!0,"Spec. 18: MathLib.pow(NaN, y) = NaN (for all y except &plusmn;0)"),equal(MathLib.isNaN(MathLib.pow(NaN,Infinity)),!0,"Spec. 18: MathLib.pow(NaN, y) = NaN (for all y except &plusmn;0)"),equal(MathLib.isNaN(MathLib.pow(NaN,-Infinity)),!0,"Spec. 18: MathLib.pow(NaN, y) = NaN (for all y except &plusmn;0)"),equal(MathLib.isNaN(MathLib.pow(NaN,NaN)),!0,"Spec. 18: MathLib.pow(NaN, y) = NaN (for all y except &plusmn;0)"),equal(MathLib.isNaN(MathLib.pow(2,NaN)),!0,"Spec. 19: MathLib.pow(x, NaN) = NaN (for all x except +1)"),equal(MathLib.isNaN(MathLib.pow(Infinity,NaN)),!0,"Spec. 19: MathLib.pow(x, NaN) = NaN (for all x except +1)"),equal(MathLib.isNaN(MathLib.pow(-Infinity,NaN)),!0,"Spec. 19: MathLib.pow(x, NaN) = NaN (for all x except +1)"),equal(MathLib.isNaN(MathLib.pow(0,NaN)),!0,"Spec. 19: MathLib.pow(x, NaN) = NaN (for all x except +1)"),equal(MathLib.isNaN(MathLib.pow(0,NaN)),!0,"Spec. 19: MathLib.pow(x, NaN) = NaN (for all x except +1)"),equal(MathLib.pow(2,3),8,"Spec. 20: otherwise MathLib.pow(x, n) = x^n"),equal(MathLib.pow(2,-3),.125,"Spec. 20: otherwise MathLib.pow(x, n) = x^n")}),test(".radToDeg()",7,function(){equal(MathLib.isNaN(MathLib.radToDeg(NaN)),!0,"Spec. 1: MathLib.radToDeg(NaN) = NaN"),equal(MathLib.isPosZero(MathLib.radToDeg(0)),!0,"Spec. 2: MathLib.radToDeg(+0) = +0"),equal(MathLib.isNegZero(MathLib.radToDeg(0)),!0,"Spec. 3: MathLib.radToDeg(-0) = -0"),equal(MathLib.radToDeg(+Infinity),Infinity,"Spec. 4: MathLib.radToDeg(+&infin;) = +&infin;"),equal(MathLib.radToDeg(-Infinity),-Infinity,"Spec. 5: MathLib.radToDeg(-&infin;) = -&infin;"),equal(MathLib.radToDeg(Math.PI/2),90,"Spec. 6: otherwise MathLib.radToDeg(x) = x * π/180"),equal(MathLib.radToDeg(Math.PI),180,"Spec. 6: otherwise MathLib.radToDeg(x) = x * π/180")}),test(".risingFactorial()",3,function(){equal(MathLib.risingFactorial(2,0),1),equal(MathLib.risingFactorial(2,3),24),equal(MathLib.risingFactorial(3,4,.5),189)}),test(".round()",10,function(){equal(MathLib.isNaN(MathLib.round(NaN)),!0,"Spec. 1: MathLib.round(NaN) = NaN"),equal(MathLib.isPosZero(MathLib.round(0)),!0,"Spec. 2: MathLib.round(x) = +0 if +0 ≤ x < 0.5"),equal(MathLib.isPosZero(MathLib.round(.2)),!0,"Spec. 2: MathLib.round(x) = +0 if +0 ≤ x < 0.5"),equal(MathLib.isNegZero(MathLib.round(0)),!0,"Spec. 3: MathLib.round(x) = -0 if -0.5 ≤ x ≤ -0"),equal(MathLib.isNegZero(MathLib.round(-0.5)),!0,"Spec. 3: MathLib.round(x) = -0 if -0.5 ≤ x ≤ -0"),equal(MathLib.round(+Infinity),+Infinity,"Spec. 4: MathLib.round(+&infin;) = +&infin;"),equal(MathLib.round(-Infinity),-Infinity,"Spec. 5: MathLib.round(-&infin;) = -&infin;"),equal(MathLib.round(2.2),2,"Spec. 6: otherwise MathLib.round(x) =  ⎣ x+0.5 ⎦"),equal(MathLib.round(2.5),3,"Spec. 6: otherwise MathLib.round(x) = ⎣ x+0.5 ⎦"),equal(MathLib.round(-2.2),-2,"Spec. 6: otherwise MathLib.round(x) = ⎣ x+0.5 ⎦")}),test(".sec()",7,function(){equal(MathLib.isNaN(MathLib.sec(NaN)),!0,"Spec. 1: MathLib.sec(NaN) = NaN"),equal(MathLib.sec(0),1,"Spec. 2: MathLib.sec(+0) = 1"),equal(MathLib.sec(0),1,"Spec. 3: MathLib.sec(-0) = 1"),equal(MathLib.isNaN(MathLib.sec(+Infinity)),!0,"Spec. 4: MathLib.sec(+&infin;) = NaN"),equal(MathLib.isNaN(MathLib.sec(-Infinity)),!0,"Spec. 5: MathLib.sec(-&infin;) = NaN"),equal(MathLib.sec(Math.PI),-1,"Spec. 6: otherwise MathLib.sec(x) = secant of x"),equal(MathLib.sec(2*Math.PI),1,"Spec. 6: otherwise MathLib.sec(x) = secant of x")}),test(".sign()",7,function(){equal(MathLib.isNaN(MathLib.sign(NaN)),!0,"Spec. 1: MathLib.sign(NaN) = NaN"),equal(MathLib.isPosZero(MathLib.sign(0)),!0,"Spec. 2: MathLib.sign(0) = 0"),equal(MathLib.isNegZero(MathLib.sign(0)),!0,"Spec. 3: MathLib.sign(-0) = -0"),equal(MathLib.sign(4),1,"Spec. 4: MathLib.sign(x) = 1 for x > 0"),equal(MathLib.sign(Infinity),1,"Spec. 4: MathLib.sign(x) = 1 for x > 0"),equal(MathLib.sign(-4),-1,"Spec. 5: MathLib.sign(x) = -1 for x < 0"),equal(MathLib.sign(-Infinity),-1,"Spec. 5: MathLib.sign(x) = -1 for x < 0")}),test(".sin()",7,function(){equal(MathLib.isNaN(MathLib.sin(NaN)),!0,"Spec. 1: MathLib.sin(NaN) = NaN"),equal(MathLib.isPosZero(MathLib.sin(0)),!0,"Spec. 2: MathLib.sin(+0) = +0"),equal(MathLib.isNegZero(MathLib.sin(0)),!0,"Spec. 3: MathLib.sin(-0) = -0"),equal(MathLib.isNaN(MathLib.sin(+Infinity)),!0,"Spec. 4: MathLib.sin(+&infin;) = NaN"),equal(MathLib.isNaN(MathLib.sin(-Infinity)),!0,"Spec. 5: MathLib.sin(-&infin;) = NaN"),equal(MathLib.sin(Math.PI/2),1,"Spec. 6: otherwise MathLib.sin(x) = sine of x"),equal(MathLib.sin(-Math.PI/2),-1,"Spec. 6: otherwise MathLib.sin(x) = sine of x")}),test(".sqrt()",8,function(){equal(MathLib.isNaN(MathLib.sqrt(NaN)),!0,"Spec. 1: MathLib.sqrt(NaN) = NaN"),equal(MathLib.isPosZero(MathLib.sqrt(0)),!0,"Spec. 2: MathLib.sqrt(+0) = +0"),equal(MathLib.isPosZero(MathLib.sqrt(0)),!0,"Spec. 3: MathLib.sqrt(-0) = +0"),equal(MathLib.sqrt(+Infinity),+Infinity,"Spec. 4: MathLib.sqrt(+&infin;) = +&infin;"),equal(MathLib.isNaN(MathLib.sqrt(-Infinity)),!0,"Spec. 5: MathLib.sqrt(x) = NaN if x < 0"),equal(MathLib.isNaN(MathLib.sqrt(-2)),!0,"Spec. 5: MathLib.sqrt(x) = NaN if x < 0"),equal(MathLib.sqrt(9),3,"Spec. 6: otherwise MathLib.sqrt(x) = square root of x"),equal(MathLib.sqrt(2),1.4142135623730951,"Spec. 6: otherwise MathLib.sqrt(x) = square root of x")}),test(".tan()",7,function(){equal(MathLib.isNaN(MathLib.tan(NaN)),!0,"Spec. 1: MathLib.tan(NaN) = NaN"),equal(MathLib.isPosZero(MathLib.tan(0)),!0,"Spec. 2: MathLib.tan(+0) = +0"),equal(MathLib.isNegZero(MathLib.tan(0)),!0,"Spec. 3: MathLib.tan(-0) = -0"),equal(MathLib.isNaN(MathLib.tan(+Infinity)),!0,"Spec. 4: MathLib.tan(+&infin;) = NaN"),equal(MathLib.isNaN(MathLib.tan(-Infinity)),!0,"Spec. 5: MathLib.tan(-&infin;) = NaN"),equal(MathLib.isZero(MathLib.tan(Math.PI)),!0,"Spec. 6: otherwise MathLib.tan(x) = tangent of x"),equal(MathLib.isOne(MathLib.tan(Math.PI/4)),!0,"Spec. 6: otherwise MathLib.tan(x) = tangent of x")}),test(".type()",11,function(){equal(MathLib.type(MathLib.complex([2,3])),"complex","MathLib.type(MathLib.complex([2, 3])) = 'complex'"),equal(MathLib.type(42),"number","MathLib.type(42) = 'number'"),equal(MathLib.type(["ar","ray"]),"array","MathLib.type(['ar', 'ray']) = 'array'"),equal(MathLib.type({ob:"ject"}),"object","MathLib.type({ob: 'ject'}) = 'object'"),equal(MathLib.type(!0),"boolean","MathLib.type(true) = 'boolean'"),equal(MathLib.type("string"),"string","MathLib.type('string') = 'string'"),equal(MathLib.type(function(){}),"function","MathLib.type(function(){}) = 'function'"),equal(MathLib.type(/regexp/),"regexp","MathLib.type(/regexp/) = 'regexp'"),equal(MathLib.type(document.getElementsByTagName("div")[0]),"htmldivelement","MathLib.type(document.getElementsByTagName('div')[0]) = 'htmldivelement'"),equal(MathLib.type(undefined),"undefined","MathLib.type(undefined) = 'undefined'"),equal(MathLib.type(null),"null","MathLib.type(null) = 'null'")}),module("Circle"),test("init",2,function(){var a=MathLib.point(1,2),b=MathLib.circle(a,2);equal(b.radius,2,"Testing the radius"),deepEqual(b.center,a,"Testing the center")}),test(".constructor",1,function(){var a=MathLib.circle(MathLib.point([2,4,2]),2);equal(a.constructor,MathLib.circle,"Testing .constructor")}),test(".type",1,function(){var a=MathLib.circle(MathLib.point([2,4,2]),2);equal(a.type,"circle","Testing .type")}),test(".area()",5,function(){var a=MathLib.point(1,2),b=MathLib.circle(a,NaN),c=MathLib.circle(a,0),d=MathLib.circle(a,0),e=MathLib.circle(a,Infinity),f=MathLib.circle(a,2);equal(MathLib.isNaN(b.area()),!0,"Spec. 1: c.area() = NaN if r = NaN"),equal(MathLib.isPosZero(c.area()),!0,"Spec. 2: c.area() = +0 if r = +0"),equal(MathLib.isPosZero(d.area()),!0,"Spec. 3: c.area() = -0 if r = +0"),equal(e.area(),Infinity,"Spec. 4: c.area() = &infin; if r = &infin;"),equal(f.area(),4*MathLib.pi,"Spec. 5: otherwise c.area() = &pi; * r * r")}),test(".circumference()",5,function(){var a=MathLib.point(1,2),b=MathLib.circle(a,NaN),c=MathLib.circle(a,0),d=MathLib.circle(a,0),e=MathLib.circle(a,Infinity),f=MathLib.circle(a,2);equal(MathLib.isNaN(b.circumference()),!0,"Spec. 1: c.circumference() = NaN if r = NaN"),equal(MathLib.isPosZero(c.circumference()),!0,"Spec. 2: c.circumference() = +0 if r = +0"),equal(MathLib.isNegZero(d.circumference()),!0,"Spec. 3: c.circumference() = -0 if r = -0"),equal(e.circumference(),Infinity,"Spec. 4: c.circumference() = &infin; if r = &infin;"),equal(f.circumference(),4*MathLib.pi,"Spec. 5: otherwise c.circumference() = 2 &pi; r")}),test(".isContaining()",3,function(){var a=MathLib.point(1,2),b=MathLib.point(2,3),c=MathLib.point(1,4),d=MathLib.point(2,4),e=MathLib.circle(a,2);ok(e.isContaining(b),"Point inside the circle"),ok(!e.isContaining(c),"Point on the circle"),ok(!e.isContaining(d),"Point outside the circle")}),test(".isEqual()",2,function(){var a=MathLib.circle(MathLib.point(1,2),2),b=MathLib.circle(MathLib.point(1,2),3),c=MathLib.circle(MathLib.point([2,4,2]),2);equal(a.isEqual(b),!1,".isEqual()"),equal(a.isEqual(c),!0,".isEqual()")}),test(".reflectAt()",2,function(){var a=MathLib.point(1,2),b=MathLib.point(3,7),c=MathLib.circle(a,2),d=c.reflectAt(b);equal(d.radius,2,"Checking the radius."),deepEqual(d.center,MathLib.point(5,12),"Checking the center.")}),test(".toLaTeX()",1,function(){var a=MathLib.point(1,2),b=MathLib.circle(a,2);equal(b.toLaTeX(),"B_{2}\\left(\\begin{pmatrix}1\\\\2\\end{pmatrix}\\right)","Spec. 1: ")}),module("Complex"),test("init (1 Array)",3,function(){var a=MathLib.complex([1,2]);equal(a.re,1,"Testing the real part"),equal(a.im,2,"Testing the imaginary part"),deepEqual(a.z,[1,2],"Testing the complete complex number")}),test("init (1 Number)",3,function(){var a=MathLib.complex(3);equal(a.re,3,"Testing the real part"),equal(a.im,0,"Testing the imaginary part"),deepEqual(a.z,[3,0],"Testing the complete complex number")}),test("init (2 Numbers)",3,function(){var a=MathLib.complex(3,2);equal(a.re,3*Math.cos(2),"Testing the real part"),equal(a.im,3*Math.sin(2),"Testing the imaginary part"),deepEqual(a.z,[3*Math.cos(2),3*Math.sin(2)],"Testing the complete complex number")}),test(".constructor",1,function(){var a=MathLib.complex([3,4]);equal(a.constructor,MathLib.complex,"Testing .constructor")}),test(".type",1,function(){var a=MathLib.complex([3,4]);equal(a.type,"complex","Testing .type")}),test(".abs()",2,function(){var a=MathLib.complex([3,4]),b=MathLib.complex([0,0]);equal(MathLib.isEqual(a.abs(),5),!0,"Absolut value of a complex number"),equal(MathLib.isEqual(b.abs(),0),!0,"Absolut value of a complex number")}),test(".arg()",4,function(){var a=MathLib.complex([1,1]),b=MathLib.complex([1,-1]),c=MathLib.complex([0,0]),d=MathLib.complex([-1,0]);equal(a.arg(),.7853981633974483,""),equal(b.arg(),-0.7853981633974483,""),equal(c.arg(),0,""),equal(d.arg(),3.141592653589793,"")}),test(".compare()",3,function(){var a=MathLib.complex([3,2]),b=MathLib.complex([1,1]),c=MathLib.complex([-1,1]);equal(a.compare(a),0,"equal complex numbers"),equal(a.compare(b),1,"normal compare"),equal(b.compare(c),-1,"")}),test(".conjugate()",1,function(){var a=MathLib.complex([3,4]);deepEqual([3,-4],a.conjugate().z,"Checking the conjugate of a complex number")}),test(".divide()",2,function(){var a=MathLib.complex([3,6]),b=MathLib.complex([2,5]),c=MathLib.complex([3,7]);deepEqual(a.divide(3),MathLib.complex([1,2]),"Dividing by a normal number."),ok(b.divide(c).isEqual(MathLib.complex([41/58,1/58])),"Dividing by a complex number.")}),test(".inverse()",2,function(){var a=MathLib.complex([3,4]),b=MathLib.complex([0,2]);deepEqual(a.inverse(),MathLib.complex([.12,-0.16]),"Checking the inverse of a complex number"),deepEqual(b.inverse(),MathLib.complex([0,-0.5]),"Checking the inverse of a complex number")}),test(".isEqual()",2,function(){var a=MathLib.complex([3,4]),b=MathLib.complex([3,4]),c=MathLib.complex([5,3]);equal(a.isEqual(b),!0,"equal number"),equal(b.isEqual(c),!1,"different number")}),test(".isFinite()",2,function(){var a=MathLib.complex([3,4]),b=MathLib.complex([Infinity,0]);equal(a.isFinite(),!0,"finite complex number"),equal(b.isFinite(),!1,"infinte complex number")}),test(".isOne()",2,function(){var a=MathLib.complex([3,4]),b=MathLib.complex([1,0]);equal(a.isOne(),!1,"3+4i"),equal(b.isOne(),!0,"complex one")}),test(".isReal()",2,function(){var a=MathLib.complex([3,4]),b=MathLib.complex([3,0]);equal(a.isReal(),!1,"3+4i"),equal(b.isReal(),!0,"3+0i")}),test(".isZero()",2,function(){var a=MathLib.complex([3,4]),b=MathLib.complex([0,0]);equal(a.isZero(),!1,"non zero complex"),equal(b.isZero(),!0,"complex zero")}),test(".ln()",1,function(){var a=MathLib.complex([3,4]),b=MathLib.complex([1.6094379124341003,.9272952180016123]);equal(MathLib.isEqual(a.ln(),b),!0,"natural logarithm of the complex number")}),test(".mod()",1,function(){var a=MathLib.complex([5,6]),b=MathLib.complex([2,0]);equal(a.mod(3).isEqual(b),!0,".mod()")}),test(".minus()",1,function(){var a=MathLib.complex([3,-4]),b=MathLib.complex([7,-8]);deepEqual(a.minus(b),MathLib.complex([-4,4]),"Checking the negative of a complex number")}),test(".negative()",1,function(){var a=MathLib.complex([3,-4]);deepEqual([-3,4],a.negative().z,"Checking the negative of a complex number")}),test(".plus()",2,function(){var a=MathLib.complex([3,4]),b=MathLib.complex([2,-5]);deepEqual([5,-1],a.plus(b).z,"Adding two complex numbers."),deepEqual([8,4],a.plus(5).z,"Adding a number to a complex numbers.")}),test(".sign()",1,function(){var a=MathLib.complex([5,6]),b=MathLib.complex(1,Math.atan2(6,5));equal(a.sign().isEqual(b),!0,".sign()")}),test(".sin()",1,function(){ok(MathLib.isEqual(MathLib.sin(MathLib.complex([3,4])),MathLib.complex([3.853738037919377,-27.016813258003932])))}),test(".times()",2,function(){var a=MathLib.complex([2,5]),b=MathLib.complex([3,7]);deepEqual([6,15],a.times(3).z,"Multiplying by a normal number."),deepEqual([-29,29],a.times(b).z,"Multiplying by a complex number.")}),test(".toContentMathMLString()",5,function(){var a=MathLib.complex([3,4]),b=MathLib.complex([0,7]),c=MathLib.complex([4,0]),d=MathLib.complex([4,-5]),e=MathLib.complex([0,0]);equal(a.toContentMathMLString(),'<cn type="complex-cartesian">3<sep/>4</cn>',"Normal complex number."),equal(b.toContentMathMLString(),'<cn type="complex-cartesian">0<sep/>7</cn>',"Real part is zero."),equal(c.toContentMathMLString(),'<cn type="complex-cartesian">4<sep/>0</cn>',"Complex part is zero."),equal(d.toContentMathMLString(),'<cn type="complex-cartesian">4<sep/>-5</cn>',"Complex part is negative."),equal(e.toContentMathMLString(),'<cn type="complex-cartesian">0<sep/>0</cn>',"Number is zero.")}),test(".toLaTeX()",5,function(){var a=MathLib.complex([3,4]),b=MathLib.complex([0,7]),c=MathLib.complex([4,0]),d=MathLib.complex([4,-5]),e=MathLib.complex([0,0]);equal(a.toLaTeX(),"3+4i","Normal complex number."),equal(b.toLaTeX(),"7i","Real part is zero."),equal(c.toLaTeX(),"4","Complex part is zero."),equal(d.toLaTeX(),"4-5i","Complex part is negative."),equal(e.toLaTeX(),"0","Number is zero.")}),test(".toMathMLString()",5,function(){var a=MathLib.complex([3,4]),b=MathLib.complex([0,7]),c=MathLib.complex([4,0]),d=MathLib.complex([4,-5]),e=MathLib.complex([0,0]);equal(a.toMathMLString(),"<mn>3</mn><mo>+</mo><mn>4</mn><mo>&#x2062;</mo><mi>i</mi>","Normal complex number."),equal(b.toMathMLString(),"<mn>7</mn><mo>&#x2062;</mo><mi>i</mi>","Real part is zero."),equal(c.toMathMLString(),"<mn>4</mn>","Complex part is zero."),equal(d.toMathMLString(),"<mn>4</mn><mo>-</mo><mn>5</mn><mo>&#x2062;</mo><mi>i</mi>","Complex part is negative."),equal(e.toMathMLString(),"<mn>0</mn>","Number is zero.")}),test(".toMatrix()",2,function(){var a=MathLib.complex([3,-4]);equal(a.toMatrix().type,"matrix","type check"),deepEqual(a.toMatrix().toComplex().z,[3,-4],"back transformation")}),test(".toPoint()",3,function(){var a=MathLib.complex([3,-4]),b=a.toPoint();equal(b.type,"point","Converting a complex number to a point: type check"),equal(b.dim,2,"Converting a complex number to a point: dimension check."),deepEqual(b,MathLib.point([3,-4,1]),"Converting a complex number to a point: position check.")}),test(".toString()",5,function(){var a=MathLib.complex([3,4]),b=MathLib.complex([0,7]),c=MathLib.complex([4,0]),d=MathLib.complex([4,-5]),e=MathLib.complex([0,0]);equal(a.toString(),"3+4i","Normal complex number."),equal(b.toString(),"7i","Real part is zero."),equal(c.toString(),"4","Complex part is zero."),equal(d.toString(),"4-5i","Complex part is negative."),equal(e.toString(),"0","Number is zero.")}),test("one",1,function(){var a=MathLib.complex.one;deepEqual(a,MathLib.complex([1,0]),".one")}),test("zero",1,function(){var a=MathLib.complex.zero;deepEqual(a,MathLib.complex([0,0]),".zero")}),module("Functn"),test("execution",4,function(){equal(MathLib.sin(0),0,"MathLib.sin(0) should be 0"),equal(MathLib.exp(MathLib.sin)(0),1,"MathLib.exp(MathLib.sin)(0) should be 1"),equal(MathLib.plus(MathLib.sin,2)(0),2,"sin(0) + 2"),equal(MathLib.plus(MathLib.times(MathLib.sin,MathLib.sin),MathLib.times(MathLib.cos,MathLib.cos))(42),1,"sin(42)^2 + cos(42)^2 = 1")}),test(".type",4,function(){equal(MathLib.sin.type,"functn","MathLib.sin.type should be functn"),equal(MathLib.exp(MathLib.sin).type,"functn","MathLib.exp(MathLib.sin).type should be functn"),equal(MathLib.plus(1,MathLib.cos).type,"functn","MathLib.plus(1, MathLib.cos).type should be functn"),equal(MathLib.plus(MathLib.cos,1).type,"functn","MathLib.plus(MathLib.cos, 1).type should be functn")}),test(".toContentMathMLString()",6,function(){equal(MathLib.sin.toContentMathMLString().toString(),'<math xmlns="http://www.w3.org/1998/Math/MathML"><lambda><bvar><ci>x</ci></bvar><domainofapplication><complexes/></domainofapplication><apply><sin/><ci>x</ci></apply></lambda></math>',"MathLib.sin.toContentMathMLString()"),equal(MathLib.exp(MathLib.sin).toContentMathMLString().toString(),'<math xmlns="http://www.w3.org/1998/Math/MathML"><lambda><bvar><ci>x</ci></bvar><domainofapplication><complexes/></domainofapplication><apply><exp/><apply><sin/><ci>x</ci></apply></apply></lambda></math>',"MathLib.exp(MathLib.sin).toContentMathMLString()"),equal(MathLib.plus(MathLib.sin,2).toContentMathMLString(),'<math xmlns="http://www.w3.org/1998/Math/MathML"><lambda><bvar><ci>x</ci></bvar><domainofapplication><complexes/></domainofapplication><apply><plus/><apply><sin/><ci>x</ci></apply><cn>2</cn></apply></lambda></math>',"MathLib.plus(MathLib.sin, 2).toContentMathMLString()"),equal(MathLib.plus(2,MathLib.sin).toContentMathMLString(),'<math xmlns="http://www.w3.org/1998/Math/MathML"><lambda><bvar><ci>x</ci></bvar><domainofapplication><complexes/></domainofapplication><apply><plus/><cn>2</cn><apply><sin/><ci>x</ci></apply></apply></lambda></math>',"MathLib.plus(2, MathLib.sin).toContentMathMLString()"),equal(MathLib.times(2,MathLib.sin).toContentMathMLString(),'<math xmlns="http://www.w3.org/1998/Math/MathML"><lambda><bvar><ci>x</ci></bvar><domainofapplication><complexes/></domainofapplication><apply><times/><cn>2</cn><apply><sin/><ci>x</ci></apply></apply></lambda></math>',"MathLib.times(2, MathLib.sin).toContentMathMLString()"),equal(MathLib.plus(MathLib.sin,MathLib.cos).toContentMathMLString(),'<math xmlns="http://www.w3.org/1998/Math/MathML"><lambda><bvar><ci>x</ci></bvar><domainofapplication><complexes/></domainofapplication><apply><plus/><apply><sin/><ci>x</ci></apply><apply><cos/><ci>x</ci></apply></apply></lambda></math>',"MathLib.plus(MathLib.sin, MathLib.cos).toContentMathMLString()")}),test(".toLaTeX()",7,function(){equal(MathLib.sin.toLaTeX(),"\\sin(x)","MathLib.sin.toLaTeX() should be sin(x)"),equal(MathLib.sin.toLaTeX("z"),"\\sin(z)","custom bound variable"),equal(MathLib.exp(MathLib.sin).toLaTeX(),"\\exp(\\sin(x))","MathLib.exp(MathLib.sin).toLaTeX() should be exp(sin(x))"),equal(MathLib.plus(MathLib.sin,2).toLaTeX(),"\\sin(x)+2","MathLib.plus(MathLib.sin, 2).toLaTeX() = sin(x)+2"),equal(MathLib.plus(2,MathLib.sin).toLaTeX(),"2+\\sin(x)","MathLib.plus(2, MathLib.sin).toLaTeX() = 2+sin(x)"),equal(MathLib.times(2,MathLib.sin).toLaTeX(),"2*\\sin(x)","MathLib.times(2, MathLib.sin).toLaTeX() = 2*sin(x)"),equal(MathLib.plus(MathLib.sin,MathLib.cos).toLaTeX(),"\\sin(x)+\\cos(x)","MathLib.plus(MathLib.sin, MathLib.cos).toLaTeX() = sin(x)+cos(x)")}),test(".toMathMLString()",6,function(){equal(MathLib.sin.toMathMLString(),'<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mi>sin</mi><mo>&af;</mo><mfenced><mi>x</mi></mfenced></mrow></math>',"MathLib.sin.toMathML()"),equal(MathLib.exp(MathLib.sin).toMathMLString(),'<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mi>exp</mi><mo>&af;</mo><mfenced><mrow><mi>sin</mi><mo>&af;</mo><mfenced><mi>x</mi></mfenced></mrow></mfenced></mrow></math>',"MathLib.exp(MathLib.sin).toMathML()"),equal(MathLib.plus(MathLib.sin,2).toMathMLString(),'<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mrow><mi>sin</mi><mo>&af;</mo><mfenced><mi>x</mi></mfenced></mrow><mo>+</mo><mn>2</mn></mrow></math>',"MathLib.plus(MathLib.sin, 2).toMathML()"),equal(MathLib.plus(2,MathLib.sin).toMathMLString(),'<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mn>2</mn><mo>+</mo><mrow><mi>sin</mi><mo>&af;</mo><mfenced><mi>x</mi></mfenced></mrow></mrow></math>',"MathLib.plus(2, MathLib.sin).toMathML()"),equal(MathLib.times(2,MathLib.sin).toMathMLString(),'<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mn>2</mn><mo>*</mo><mrow><mi>sin</mi><mo>&af;</mo><mfenced><mi>x</mi></mfenced></mrow></mrow></math>',"MathLib.times(2, MathLib.sin).toMathML()"),equal(MathLib.plus(MathLib.sin,MathLib.cos).toMathMLString(),'<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mrow><mi>sin</mi><mo>&af;</mo><mfenced><mi>x</mi></mfenced></mrow><mo>+</mo><mrow><mi>cos</mi><mo>&af;</mo><mfenced><mi>x</mi></mfenced></mrow></mrow></math>',"MathLib.plus(MathLib.sin, MathLib.cos).toMathML()")}),test(".toString()",7,function(){equal(MathLib.sin.toString(),"sin(x)","MathLib.sin.toString() should be sin(x)"),equal(MathLib.sin.toString("z"),"sin(z)","custom bound variable"),equal(MathLib.exp(MathLib.sin).toString(),"exp(sin(x))","MathLib.exp(MathLib.sin).toString() should be exp(sin(x))"),equal(MathLib.plus(MathLib.sin,2).toString(),"sin(x)+2","MathLib.plus(MathLib.sin, 2).toString() = sin(x)+2"),equal(MathLib.plus(2,MathLib.sin).toString(),"2+sin(x)","MathLib.plus(2, MathLib.sin).toString() = 2+sin(x)"),equal(MathLib.times(2,MathLib.sin).toString(),"2*sin(x)","MathLib.times(2, MathLib.sin).toString() = 2*sin(x)"),equal(MathLib.plus(MathLib.sin,MathLib.cos).toString(),"sin(x)+cos(x)","MathLib.plus(MathLib.sin, MathLib.cos).toString() = sin(x)+cos(x)")}),module("Line"),test("init",2,function(){var a=MathLib.line([3,2,1]);equal(a.dim,2,"Testing the dimension"),deepEqual(a,[3,2,1],"Testing the entries")}),test(".constructor",1,function(){var a=MathLib.line([3,2,1]);equal(a.constructor,MathLib.line,"Testing .constructor")}),test(".type",1,function(){var a=MathLib.line([3,2,1]);equal(a.type,"line","Testing .type")}),test(".isEqual()",3,function(){var a=MathLib.line([3,2,1]),b=MathLib.line([6,4,2]),c=MathLib.line([1,1,1]),d=MathLib.line([1,1,1,1]);equal(a.isEqual(b),!0,".isEqual()"),equal(a.isEqual(c),!1,".isEqual()"),equal(c.isEqual(d),!1,".isEqual()")}),test(".isFinite()",2,function(){var a=MathLib.line([3,2,1]),b=MathLib.line([6,4,0]);equal(a.isFinite(),!0,".isFinite()"),equal(b.isFinite(),!1,".isFinite()")}),test(".map()",2,function(){var a=MathLib.line([1,2,3]),b=MathLib.line([2,4,6]),c=function(a){return 2*a},d=a.map(c);deepEqual(d,b,".map()"),equal(d.type,"line",".type should be line")}),test(".toLaTeX()",1,function(){var a=MathLib.line([3,2,1]);equal(a.toLaTeX(),"\\begin{pmatrix}\n\t3\\\\\n\t2\\\\\n\t1\n\\end{pmatrix}",".toLaTeX()")}),test(".toMathMLString()",1,function(){var a=MathLib.line([3,2,1]);equal(a.toMathMLString(),"<mrow><mo>(</mo><mtable><mtr><mtd><mn>3</mn></mtd></mtr><mtr><mtd><mn>2</mn></mtd></mtr><mtr><mtd><mn>1</mn></mtd></mtr></mtable><mo>)</mo></mrow>",".toMathMLString()")}),test(".toString()",1,function(){var a=MathLib.line([3,2,1]);equal(a.toString(),"(3, 2, 1)",".toString()")}),module("MathML"),test("init",2,function(){var a=MathLib.MathML('<math xmlns="http://www.w3.org/1998/Math/MathML"><matrix><matrixrow><cn>1</cn><cn>0</cn></matrixrow><matrixrow><cn>0</cn><cn>1</cn></matrixrow></matrix></math>'),b=[],c=a;while(c.nextNode)c=c.nextNode,b.push(c.nodeName);equal(typeof a,"object","Testing typeof the MathML"),deepEqual(b,["matrix","matrixrow","cn","#text","cn","#text","matrixrow","cn","#text","cn","#text"],"Checking if the MathML was tokenized right.")}),test("whitespaces",2,function(){var a=MathLib.MathML('<math xmlns="http://www.w3.org/1998/Math/MathML">\n<set>\t<cn>  123  </cn><cs>String with spaces</cs> </set>\t</math>'),b=[],c=a;while(c.nextNode)c=c.nextNode,b.push(c.nodeName);deepEqual(b,["set","cn","#text","cs","#text","#text"],"Checking if the MathML was tokenized right."),equal(a.childNodes[0].childNodes[1].innerMathML,"String with spaces")}),test(".constructor",1,function(){var a=MathLib.MathML('<math xmlns="http://www.w3.org/1998/Math/MathML"><cn type="complex-cartesian">3<sep/>4</cn></math>');deepEqual(a.constructor,MathLib.MathML,"Testing .constructor")}),test(".type",1,function(){var a=MathLib.MathML('<math xmlns="http://www.w3.org/1998/Math/MathML"><cn type="complex-cartesian">3<sep/>4</cn></math>');equal(a.type,"MathML","Testing .type")}),test(".parse() boolean",8,function(){equal(MathLib.MathML('<math xmlns="http://www.w3.org/1998/Math/MathML"><apply><and/><true/><true/></apply></math>').parse(),!0,"</and> true true"),equal(MathLib.MathML('<math xmlns="http://www.w3.org/1998/Math/MathML"><apply><and/><true/><false/><true/></apply></math>').parse(),!1,"</and> true false true"),equal(MathLib.MathML('<math xmlns="http://www.w3.org/1998/Math/MathML"><apply><or/><false/><false/></apply></math>').parse(),!1,"</or> false false"),equal(MathLib.MathML('<math xmlns="http://www.w3.org/1998/Math/MathML"><apply><or/><true/><false/><true/></apply></math>').parse(),!0,"</or> true false true"),equal(MathLib.MathML('<math xmlns="http://www.w3.org/1998/Math/MathML"><apply><xor/><false/><true/></apply></math>').parse(),!0,"</xor> false false"),equal(MathLib.MathML('<math xmlns="http://www.w3.org/1998/Math/MathML"><apply><xor/><true/><false/><true/></apply></math>').parse(),!1,"</xor> true false true"),equal(MathLib.MathML('<math xmlns="http://www.w3.org/1998/Math/MathML"><apply><not/><false/></apply></math>').parse(),!0,"</not> false"),equal(MathLib.MathML('<math xmlns="http://www.w3.org/1998/Math/MathML"><apply><not/><true/></apply></math>').parse(),!1,"</not> true")}),test(".parse() ci",1,function(){MathLib.MathML.variables.n=42,deepEqual(MathLib.MathML('<math xmlns="http://www.w3.org/1998/Math/MathML"><ci>n</ci></math>').parse(),42,".parse() a normal number")}),test(".parse() cn",5,function(){deepEqual(MathLib.MathML('<math xmlns="http://www.w3.org/1998/Math/MathML"><cn>+34</cn></math>').parse(),34,".parse() a normal number"),deepEqual(MathLib.MathML('<math xmlns="http://www.w3.org/1998/Math/MathML"><cn>34.2</cn></math>').parse(),34.2,".parse() a normal number"),deepEqual(MathLib.MathML('<math xmlns="http://www.w3.org/1998/Math/MathML"><cn>.123</cn></math>').parse(),.123,".parse() a normal number"),deepEqual(MathLib.MathML('<math xmlns="http://www.w3.org/1998/Math/MathML"><cn>+34E-12</cn></math>').parse(),3.4e-11,".parse() a normal number"),deepEqual(MathLib.MathML('<math xmlns="http://www.w3.org/1998/Math/MathML"><cn>+34.345E-12</cn></math>').parse(),3.4345e-11,".parse() a normal number")}),test(".parse() complex",2,function(){deepEqual(MathLib.MathML('<math xmlns="http://www.w3.org/1998/Math/MathML"><cn type="complex-cartesian">3<sep/>4</cn></math>').parse(),MathLib.complex([3,4]),".parse() complex (cartesian)"),ok(MathLib.MathML('<math xmlns="http://www.w3.org/1998/Math/MathML"><cn type="complex-polar">1<sep/>3.141592653589793</cn></math>').parse().isEqual(MathLib.complex([-1,0])),".parse() complex (polar)")}),test(".parse() function constructing",6,function(){var a=MathLib.MathML('<math xmlns="http://www.w3.org/1998/Math/MathML"><lambda><bvar><ci>x</ci></bvar><domainofapplication><complexes/></domainofapplication><apply><exp/><apply><sin/><ci>x</ci></apply></apply></lambda></math>').parse();deepEqual(MathLib.MathML('<math xmlns="http://www.w3.org/1998/Math/MathML"><lambda><bvar><ci>x</ci></bvar><domainofapplication><complexes/></domainofapplication><apply><sin/><ci>x</ci></apply></lambda></math>').parse()(0),0,".parse() sin"),deepEqual(a(0),1,"exp(sin(0)) = 1"),deepEqual(a.type,"functn","exp(sin(x)).type"),deepEqual(MathLib.MathML('<math xmlns="http://www.w3.org/1998/Math/MathML"><lambda><bvar>x</bvar><domainofapplication><complexes/></domainofapplication><apply><ident/><ci>x</ci></apply></lambda></math>').parse()(42),42,"The identity function"),deepEqual(MathLib.MathML('<math xmlns="http://www.w3.org/1998/Math/MathML"><lambda><bvar><ci>x</ci></bvar><domainofapplication><complexes/></domainofapplication><apply><plus/><cn>2</cn><ci>x</ci></apply></lambda></math>').parse()(42),44,"The result of 42 + 2 should be 44"),deepEqual(MathLib.MathML('<math xmlns="http://www.w3.org/1998/Math/MathML"><lambda><bvar><ci>x</ci></bvar><domainofapplication><complexes/></domainofapplication><apply><plus/><ci>x</ci><cn>2</cn></apply></lambda></math>').parse()(42),44,"The result of 42 + 2 should be 44")}),test(".parse() function evaluation",5,function(){MathLib.MathML.variables.n=42,deepEqual(MathLib.MathML('<math xmlns="http://www.w3.org/1998/Math/MathML"><apply><sin/><cn>42</cn></apply></math>').parse(),Math.sin(42),".parse() apply"),deepEqual(MathLib.MathML('<math xmlns="http://www.w3.org/1998/Math/MathML"><apply><sin/><ci>n</ci></apply></math>').parse(),Math.sin(42),".parse() sin"),deepEqual(MathLib.MathML('<math xmlns="http://www.w3.org/1998/Math/MathML"><apply><plus/><cn>1</cn><cn>2</cn><cn>3</cn></apply></math>').parse(),6,"plus"),deepEqual(MathLib.MathML('<math xmlns="http://www.w3.org/1998/Math/MathML"><apply><ln/><cn>42</cn></apply></math>').parse(),Math.log(42),".parse() apply"),deepEqual(MathLib.MathML('<math xmlns="http://www.w3.org/1998/Math/MathML"><apply><factorial/><cn>6</cn></apply></math>').parse(),720,"factorial")}),test(".parse() matrix",2,function(){deepEqual(MathLib.MathML('<math xmlns="http://www.w3.org/1998/Math/MathML"><matrix><matrixrow><cn>1</cn><cn>0</cn><cn>0</cn></matrixrow><matrixrow><cn>0</cn><cn>1</cn><cn>0</cn></matrixrow><matrixrow><cn>0</cn><cn>0</cn><cn>1</cn></matrixrow></matrix></math>').parse(),MathLib.matrix([[1,0,0],[0,1,0],[0,0,1]]),".parse() matrix"),deepEqual(MathLib.MathML('<math xmlns="http://www.w3.org/1998/Math/MathML"><apply><determinant/><matrix><matrixrow><cn>8</cn><cn>1</cn><cn>6</cn></matrixrow><matrixrow><cn>3</cn><cn>5</cn><cn>7</cn></matrixrow><matrixrow><cn>4</cn><cn>9</cn><cn>2</cn></matrixrow></matrix></apply></math>').parse(),-360,".parse() apply")}),test(".parse() set",4,function(){deepEqual(MathLib.MathML('<math xmlns="http://www.w3.org/1998/Math/MathML"><set><cn>1</cn><cn>2</cn><cn>3</cn><cn>4</cn><cn>5</cn><cn>6</cn><cn>7</cn><cn>8</cn><cn>9</cn><cn>10</cn></set></math>').parse(),MathLib.set.fromTo(1,10),".parse() set"),deepEqual(MathLib.MathML('<math xmlns="http://www.w3.org/1998/Math/MathML"><set type="multiset"><cn>1</cn><cn>2</cn><cn>3</cn><cn>3</cn><cn>3</cn><cn>2</cn><cn>4</cn></set></math>').parse(),MathLib.set([1,2,2,3,3,3,4],!0),".parse() set"),deepEqual(MathLib.MathML('<math xmlns="http://www.w3.org/1998/Math/MathML"><apply><union/><set><cn>1</cn><cn>2</cn></set><set><cn>2</cn><cn>3</cn></set></apply></math>').parse(),MathLib.set([1,2,3]),"set union"),deepEqual(MathLib.MathML('<math xmlns="http://www.w3.org/1998/Math/MathML"><set><cs>A</cs><cs>B</cs><cs> </cs></set></math>').parse(),MathLib.set(["A","B"," "]),".parse() set")}),test(".parse() vector",1,function(){deepEqual(MathLib.MathML('<math xmlns="http://www.w3.org/1998/Math/MathML"><vector><cn>1</cn><cn>2</cn><cn>3</cn></vector></math>').parse(),MathLib.vector([1,2,3]),".parse() vector")}),test(".toString()",2,function(){var a='<math xmlns="http://www.w3.org/1998/Math/MathML"><lambda><bvar>x</bvar><domainofapplication><complexes/></domainofapplication><apply><plus/><apply><power/><ci>x</ci><cn>2</cn></apply><apply><power/><ci>x</ci><cn>3</cn></apply></apply></lambda></math>',b='<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mi>a</mi><mo>&InvisibleTimes;</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>b</mi><mo>&InvisibleTimes;</mo><mi>x</mi><mo>+</mo><mi>c</mi></mrow></math>';equal(MathLib.MathML(a).toString(),a),equal(MathLib.MathML(b).toString(),b)}),test(".isSupported()",1,function(){var a=MathLib.MathML.isSupported();ok(a===!0||a===!1,".isEqual()")}),module("Matrix"),test("init",2,function(){var a=MathLib.matrix([[1,2,3],[4,5,6],[7,8,9]]);equal(a.rows,3,"Testing the number of rows"),equal(a.cols,3,"Testing the number of cols")}),test(".constructor",1,function(){var a=MathLib.matrix([[1,2,3],[4,5,6],[7,8,9]]);equal(a.constructor,MathLib.matrix,"Testing .constructor")}),test(".type",1,function(){var a=MathLib.matrix([[1,2,3],[4,5,6],[7,8,9]]);equal(a.type,"matrix","Testing .type")}),test(".adjugate()",1,function(){var a=MathLib.complex,b=MathLib.matrix([[-3,2,-5],[-1,0,-3],[3,-4,1]]),c=MathLib.matrix([[-12,18,-6],[-8,12,-4],[4,-6,2]]);deepEqual(b.adjugate(),c,"Adjoint matrix of a complex 2x3 matrix")}),test(".adjoint()",1,function(){var a=MathLib.complex,b=MathLib.matrix([[a([3,1]),5,a([0,-2])],[a([2,-2]),a([0,1]),a([-7,-13])]]),c=MathLib.matrix([[a([3,-1]),a([2,2])],[5,a([0,-1])],[a([0,2]),a([-7,13])]]);deepEqual(b.adjoint(),c,"Adjoint matrix of a complex 2x3 matrix")}),test(".cholesky()",1,function(){var a=MathLib.matrix([[25,15,-5],[15,18,0],[-5,0,11]]),b=MathLib.matrix([[5,0,0],[3,3,0],[-1,1,3]]);deepEqual(a.cholesky(),b,"Cholesky decomposition of a 3x3 matrix")}),test(".determinant()",3,function(){var a=MathLib.matrix([[0,1,2],[3,2,1],[1,1,0]]),b=MathLib.matrix([[42]]),c=MathLib.matrix([[0,1,2],[3,2,1]]);equal(a.determinant(),3,"Determinant of a 3x3 matrix"),equal(b.determinant(),42,"Determinant of 1x1 matrix"),equal(c.determinant(),undefined,"Determinant of 2x3 matrix should be undefined")}),test(".gershgorin()",2,function(){var a=MathLib.complex,b=MathLib.matrix([[1,2,3],[4,5,6],[7,8,9]]),c=MathLib.matrix([[a([1,4]),2,3],[a([2,3]),a([4,2]),6],[7,a([0,5]),9]]),d=[MathLib.circle([1,0,1],5),MathLib.circle([5,0,1],10),MathLib.circle([9,0,1],9)],e=[MathLib.circle([1,4,1],5),MathLib.circle([4,2,1],10),MathLib.circle([9,0,1],9)];deepEqual(b.gershgorin(),d,"Gershgorin circles of a 3x3 matrix"),deepEqual(b.gershgorin(),e,"Gershgorin circles of a complex 3x3 matrix")}),test(".givens()",9,function(){var a=MathLib.matrix([[3,5],[0,2],[0,0],[4,5]]),b=MathLib.matrix([[6,5,0],[5,1,4],[0,4,3]]),c=MathLib.matrix([[0,1,6],[3,5,7],[4,9,2]]),d=a.givens(),e=d[0],f=d[1],g=MathLib.matrix([[.6,4/(5*Math.sqrt(5)),0,-8/(5*Math.sqrt(5))],[0,2/Math.sqrt(5),0,1/Math.sqrt(5)],[0,0,1,0],[.8,-3/(5*Math.sqrt(5)),0,6/(5*Math.sqrt(5))]]),h=MathLib.matrix([[5,7],[0,2.23606797749979],[0,0],[0,0]]),i=b.givens(),j=i[0],k=i[1],l=MathLib.matrix([[.768221279597376,-0.332654179360071,-0.546970988744419],[.64018439966448,.399185015232086,.656365186493303],[0,-0.854395997514289,.519622439307198]]),m=MathLib.matrix([[7.810249675906652,4.481290797651358,2.560737598657919],[0,-4.681669871625427,-0.966447931614524],[0,0,4.184328063894809]]),n=c.givens(),o=n[0],p=n[1],q=MathLib.matrix([[0,-0.581238193719096,-0.813733471206735],[.6,.650986776965388,-0.464990554975277],[.8,-0.488240082724041,.348742916231458]]),r=MathLib.matrix([[5,10.2,5.8],[0,-1.720465053408526,.09299811099505462],[0,0,-7.439848879604435]]);ok(e.isEqual(g),"Q is original matrix"),ok(f.isEqual(h),"R is original matrix"),ok(e.times(f).isEqual(a),"Q*R is original matrix"),ok(j.isEqual(l),"Q is original matrix"),ok(k.isEqual(m),"R is original matrix"),ok(j.times(k).isEqual(b),"Q*R is original matrix"),ok(o.isEqual(q),"Q is original matrix"),ok(p.isEqual(r),"R is original matrix"),ok(o.times(p).isEqual(c),"Q*R is original matrix")}),test(".isBandMatrix()",2,function(){var a=MathLib.matrix([[2,1,3,0],[1,2,1,3],[0,1,2,1],[0,0,1,2]]);equal(a.isBandMatrix(1,2),!0,"band matrix"),equal(a.isBandMatrix(1,1),!1,"upper bandwidth to small")}),test(".isDiag()",2,function(){var a=MathLib.complex(0,0),b=MathLib.matrix([[1,0,0],[0,5,0],[0,0,9]]),c=MathLib.matrix([[1,4,7],[2,5,8],[2,5,8]]);equal(b.isDiag(),!0,"square matrix"),equal(c.isDiag(),!1,"non square matrix")}),test(".isIdentity()",2,function(){var a=MathLib.matrix([[1,0,0],[0,1,0],[0,0,1]]),b=MathLib.matrix([[1,4,7],[2,5,8],[2,5,8]]);equal(a.isIdentity(),!0,".isIdentity() on identity matrix"),equal(b.isIdentity(),!1,".isIdentity() on non identity matrix")}),test(".isInvertible()",2,function(){var a=MathLib.matrix([[1,4,7],[2,5,8],[2,5,2]]),b=MathLib.matrix([[1,4,7],[2,5,8],[3,9,15]]);equal(a.isInvertible(),!0,".isInvertible(), invertible matrix"),equal(b.isInvertible(),!1,".isInvertible(), singular matrix")}),test(".isLower()",4,function(){var a=MathLib.matrix([[1,0,0],[4,5,0],[3,0,9]]),b=MathLib.matrix([[1,4,7],[2,5,8],[3,5,6]]),c=MathLib.matrix([[1,0,0],[4,5,0]]),d=MathLib.matrix([[1,0,0],[4,5,0],[4,0,6],[4,3,2]]);equal(a.isLower(),!0,"upper matrix"),equal(b.isLower(),!1,"non upper matrix"),equal(c.isLower(),!0,"upper matrix"),equal(d.isLower(),!0,"upper matrix")}),test(".isOrthogonal()",2,function(){var a=MathLib.matrix([[.8,-0.6],[.6,.8]]),b=MathLib.matrix([[1,4,7],[2,5,8],[2,5,8]]);equal(a.isOrthogonal(),!0,".isOrthogonal() on orthogal matrix"),equal(b.isOrthogonal(),!1,".isOrthogonal() on non orthogonal matrix")}),test(".isPermutation()",3,function(){var a=MathLib.matrix([[0,1,0],[1,0,0],[0,0,1]]),b=MathLib.matrix([[1,4,7],[2,5,8],[2,3,4]]),c=MathLib.matrix([[0,1,0],[1,0,0],[0,0,0]]);equal(a.isPermutation(),!0,"permutation matrix"),equal(b.isPermutation(),!1,"non permutation matrix"),equal(c.isPermutation(),!1,"zero line")}),test(".isPosDefinite()",2,function(){var a=MathLib.matrix([[2,-1,0],[-1,2,-1],[0,-1,2]]),b=MathLib.matrix([[1,2],[2,1]]);equal(a.isPosDefinite(),!0,"positiv definite matrix"),equal(b.isPosDefinite(),!1,"non positiv definite matrix")}),test(".isSquare()",2,function(){var a=MathLib.matrix([[1,2,3],[4,5,6],[7,8,9]]),b=MathLib.matrix([[1,4,7],[2,5,8]]);equal(a.isSquare(),!0,"square matrix"),equal(b.isSquare(),!1,"non square matrix")}),test(".isSymmetric()",2,function(){var a=MathLib.complex(4,0),b=MathLib.matrix([[1,7,a],[7,0,3],[4,3,1]]),c=MathLib.matrix([[0,0,0],[0,1,a],[0,0,0]]);equal(b.isSymmetric(),!0,"symmetric matrix"),equal(c.isSymmetric(),!1,"non symmetric matrix")}),test(".isUpper()",4,function(){var a=MathLib.matrix([[1,2,3],[0,5,6],[0,0,9]]),b=MathLib.matrix([[1,4,7],[2,5,8],[3,5,6]]),c=MathLib.matrix([[1,4,7],[0,5,8]]),d=MathLib.matrix([[1,4,7],[0,5,8],[0,0,6],[0,0,0]]);equal(a.isUpper(),!0,"upper matrix"),equal(b.isUpper(),!1,"non upper matrix"),equal(c.isUpper(),!0,"upper matrix"),equal(d.isUpper(),!0,"upper matrix")}),test(".isVector()",2,function(){var a=MathLib.matrix([[1,2,3],[4,5,6],[7,8,9]]),b=MathLib.matrix([[1,2,3]]);equal(a.isVector(),!1,"normal matrix"),equal(b.isVector(),!0,"one row matrix")}),test(".isZero()",2,function(){var a=MathLib.complex(0,0),b=MathLib.matrix([[0,0,0],[0,0,a],[0,0,0]]),c=MathLib.matrix([[0,0,0],[0,1,a],[0,0,0]]);equal(b.isZero(),!0,"zero matrix"),equal(c.isZero(),!1,"non zero matrix")}),test(".LU()",2,function(){var a=MathLib.matrix([[1,2,3],[1,1,1],[3,3,1]]),b=MathLib.matrix([[1,3,5],[2,4,7],[1,1,0]]),c=MathLib.matrix([[1,2,3],[1,-1,-2],[3,3,-2]]),d=MathLib.matrix([[2,4,7],[.5,1,1.5],[.5,-1,-2]]);deepEqual(a.LU(!0),c,"LU decomposition"),deepEqual(b.LU(),d,"LU decomposition")}),test(".map()",2,function(){var a=MathLib.matrix([[1,2],[3,4]]),b=MathLib.matrix([[2,4],[6,8]]),c=function(a){return 2*a},d=a.map(c);deepEqual(d,b,".map()"),equal(d.type,"matrix",".type should be matrix")}),test(".minus()",2,function(){var a=MathLib.matrix([[1,2,3],[4,5,6],[7,8,9]]),b=MathLib.matrix([[1,4,7],[2,5,8],[3,6,9]]),c=MathLib.matrix([[0,-2,-4],[2,0,-2],[4,2,0]]),d=MathLib.matrix([[0,0,0],[0,0,0],[0,0,0]]);deepEqual(a.minus(b),c,"subtracting two simple matrices"),deepEqual(b.minus(b),d,"subtracting two simple matrices")}),test(".negative()",1,function(){var a=MathLib.matrix([[1,4,7],[2,5,8],[3,6,9]]),b=MathLib.matrix([[-1,-4,-7],[-2,-5,-8],[-3,-6,-9]]);deepEqual(a.negative(),b,"negative of a simple matrix")}),test(".plus()",1,function(){var a=MathLib.matrix([[1,2,3],[4,5,6],[7,8,9]]),b=MathLib.matrix([[1,4,7],[2,5,8],[3,6,9]]),c=MathLib.matrix([[2,6,10],[6,10,14],[10,14,18]]);deepEqual(a.plus(b),c,"adding two simple matrices")}),test(".rank()",2,function(){var a=MathLib.matrix([[1,2,3],[0,5,4],[0,10,2]]),b=MathLib.matrix([[1,2,3],[0,6,4],[0,3,2]]);equal(a.rank(),3,".rank()"),equal(b.rank(),2,".rank()")}),test(".remove()",3,function(){var a=MathLib.matrix([[1,2,3],[4,5,6],[7,8,9]]),b=MathLib.matrix([[1,2,3],[7,8,9]]),c=MathLib.matrix([[1,3],[4,6],[7,9]]),d=MathLib.matrix([[4],[7]]);deepEqual(a.remove(1),b,"removing the second row"),deepEqual(a.remove(!1,1),c,"removing the second column"),deepEqual(a.remove([0],[1,2]),d,"removing the first row and the second and third col")}),test(".rref()",2,function(){var a=MathLib.matrix([[1,2,-1,-4],[2,3,-1,-11],[-2,0,-3,22]]),b=MathLib.matrix([[1,2,3],[1,2,4],[2,4,7]]);deepEqual(a.rref(),[[1,0,0,-8],[0,1,0,1],[0,0,1,-2]],"reduced row echelon form"),deepEqual(b.rref(),[[1,2,0],[0,0,1],[0,0,0]],"singular matrix")}),test(".solve()",4,function(){var a=MathLib.matrix([[1,2,3],[1,1,1],[3,3,1]]),b=MathLib.vector([2,2,0]),c=MathLib.vector([5,-6,3]),d=MathLib.matrix([[1,0,3],[2,1,0],[0,0,1]]),e=MathLib.vector([10,3,3]),f=MathLib.vector([1,1,3]),g=MathLib.complex,h=MathLib.matrix([[g([2,3]),0,3],[2,g([-1,5]),0],[g([3,-4]),g([0,1]),1]]),i=MathLib.vector([g([5,37]),g([5,19]),g([21,0])]),j=MathLib.vector([g([4,2]),g([3,0]),g([1,7])]);ok(a.solve(b).isEqual(c),"Solving a system of linear equations"),deepEqual(a.times(c),b,"Showing the solution is right"),deepEqual(d.solve(e),f,"Solving a system of linear equations"),ok(h.solve(i).isEqual(j),"Solving a complex system of linear equations")}),test(".times()",4,function(){var a=MathLib.matrix([[1,2],[3,4]]),b=MathLib.matrix([[0,1],[0,0]]),c=MathLib.matrix([[0,1],[0,3]]),d=MathLib.complex,e=MathLib.matrix([[d([2,3]),0,3],[2,d([-1,5]),0],[d([3,-4]),d([0,1]),1]]),f=MathLib.vector([d([4,2]),3,d([1,7])]),g=MathLib.vector([d([5,37]),d([5,19]),d([21,0])]);deepEqual(a.times(3),MathLib.matrix([[3,6],[9,12]]),"matrix scalar multiplication"),deepEqual(a.times(d([0,1])),MathLib.matrix([[d([0,1]),d([0,2])],[d([0,3]),d([0,4])]]),"matrix scalar multiplication"),deepEqual(a.times(b),c,"multiplying two simple matrices"),deepEqual(e.times(f),g,"complex matrix times complex vector")}),test(".trace()",2,function(){var a=MathLib.complex([3,4]),b=MathLib.matrix([[1,2,3],[4,5,6],[7,8,9]]),c=MathLib.matrix([[1,2],[3,a]]);equal(b.trace(),15,"trace of a simple matrix"),deepEqual(c.trace().z,[4,4],"trace of a complex matrix")}),test(".transpose()",2,function(){var a=MathLib.matrix([[1,2,3],[4,5,6],[7,8,9]]),b=MathLib.matrix([[1,2,3],[4,5,6]]);deepEqual(a.transpose(),MathLib.matrix([[1,4,7],[2,5,8],[3,6,9]]),"transpose a square matrix"),deepEqual(b.transpose(),MathLib.matrix([[1,4],[2,5],[3,6]]),"transpose of a rectangular matrix")}),test(".toArray()",4,function(){var a=MathLib.matrix([[1,2,3],[4,5,6],[7,8,9]]),b=a.toArray();deepEqual(b,[[1,2,3],[4,5,6],[7,8,9]],".toArray()"),equal(Object.prototype.toString.call(b),"[object Array]",".toArray()"),equal(b.type,undefined,"get sure that it is not a Mathlib object"),b[0][0]=42,deepEqual(a,MathLib.matrix([[1,2,3],[4,5,6],[7,8,9]]),"make sure the matrix hasn't changed")}),test(".toColVectors()",1,function(){var a=MathLib.matrix([[1,2,3],[4,5,6],[7,8,9]]);deepEqual(a.toColVectors(),[MathLib.vector([1,4,7]),MathLib.vector([2,5,8]),MathLib.vector([3,6,9])],".toColVectors()")}),test(".toComplex()",1,function(){var a=MathLib.matrix([[1,-2],[2,1]]);deepEqual(a.toComplex().z,[1,2],"convert a 2x2 matrix to a complex number")}),test(".toContentMathMLString()",1,function(){var a=MathLib.matrix([[1,2],[3,4]]);deepEqual(a.toContentMathMLString(),"<matrix><matrixrow><cn>1</cn><cn>2</cn></matrixrow><matrixrow><cn>3</cn><cn>4</cn></matrixrow></matrix>",".toContentMathMLString()")}),test(".toLaTeX()",1,function(){var a=MathLib.matrix([[1,2,3],[4,5,6],[7,8,9]]);deepEqual(a.toLaTeX(),"\\begin{pmatrix}\n1 & 2 & 3\\\n4 & 5 & 6\\\n7 & 8 & 9\n\\end{pmatrix}",".toLaTeX()")}),test(".toMathMLString()",1,function(){var a=MathLib.matrix([[1,2,3],[4,5,6],[7,8,9]]);deepEqual(a.toMathMLString(),"<mrow><mo> ( </mo><mtable><mtr><mtd><mn>1</mn></mtd><mtd><mn>2</mn></mtd><mtd><mn>3</mn></mtd></mtr><mtr><mtd><mn>4</mn></mtd><mtd><mn>5</mn></mtd><mtd><mn>6</mn></mtd></mtr><mtr><mtd><mn>7</mn></mtd><mtd><mn>8</mn></mtd><mtd><mn>9</mn></mtd></mtr></mtable><mo> ) </mo></mrow>",".toMathMLString()")}),test(".toRowVectors()",1,function(){var a=MathLib.matrix([[1,2,3],[4,5,6],[7,8,9]]);deepEqual(a.toRowVectors(),[MathLib.vector([1,2,3]),MathLib.vector([4,5,6]),MathLib.vector([7,8,9])],".toRowVectors()")}),test(".toString()",1,function(){var a=MathLib.matrix([[1,2,3],[4,5,6],[7,8,9]]);deepEqual(a.toString(),"1\t2\t3\n4\t5\t6\n7\t8\t9",".toString()")}),test("identity()",1,function(){equal(MathLib.matrix.identity(4).isIdentity(),!0,"creating a identity matrix")}),test("numbers()",3,function(){var a=MathLib.matrix.numbers(3,2,2),b=MathLib.matrix.numbers(4,2),c=MathLib.matrix.numbers(5);deepEqual(a,[[3,3],[3,3]],"static number method"),deepEqual(b,[[4,4],[4,4]],"static number method"),deepEqual(c,[[5]],"static number method")}),module("Permutation"),test("init",1,function(){var a=MathLib.permutation([[0,1],[2,3]]),b=MathLib.permutation([[0,1],[2,3]]);equal(a.type,"permutation","Testing .type")}),test(".constructor",1,function(){var a=MathLib.permutation([[0,1],[2,3]]);equal(a.constructor,MathLib.permutation,"Testing .constructor")}),test(".type",1,function(){var a=MathLib.permutation([[0,1],[2,3]]);equal(a.type,"permutation","Testing .type")}),test(".applyTo()",6,function(){var a=MathLib.permutation([[0,1,2],[0,1,2]]),b=MathLib.permutation([0,2,1]),c=MathLib.permutation([]),d=MathLib.vector([1,2,3]);equal(a.applyTo(0),2,"Testing .applyTo()"),equal(a.applyTo(3),3,"Testing .applyTo()"),deepEqual(b.applyTo(d),MathLib.vector([1,3,2]),"Testing .applyTo()"),equal(b.applyTo(d).type,"vector","Testing .applyTo()"),deepEqual(b.applyTo([1,2,3]),[1,3,2],"Testing .applyTo()"),equal(c.applyTo(1),1,"Testing .applyTo() with id")}),test(".map()",2,function(){var a=MathLib.permutation([1,2,3]),b=MathLib.permutation([2,4,6]),c=function(a){return 2*a},d=a.map(c);deepEqual(d,b,".map()"),equal(d.type,"permutation",".type should be permutation")}),test(".times()",1,function(){var a=MathLib.permutation([2,0,1]),b=MathLib.permutation([0,2,1]);deepEqual(a.times(b),[2,1,0],"Testing .times()")}),test(".sgn()",2,function(){var a=MathLib.permutation([[0,1],[1,2]]),b=MathLib.permutation([[0,1],[1,2,3]]);equal(a.sgn(),1,"Testing .sgn()"),equal(b.sgn(),-1,"Testing .sgn()")}),test(".toMatrix()",2,function(){var a=MathLib.permutation([[0,1],[2,3]]),b=MathLib.permutation([]),c=MathLib.matrix([[0,1,0,0],[1,0,0,0],[0,0,0,1],[0,0,1,0]]),d=MathLib.matrix([[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]]);deepEqual(a.toMatrix(),c,"Testing .toMatrix()"),deepEqual(b.toMatrix(4),d,"Testing .toMatrix() with id permutation")}),test(".toString()",2,function(){var a=MathLib.permutation([[0,1],[2,3]]),b=MathLib.permutation([]);equal(a.toString(),"(0,1)(2,3)","Testing .toString()"),equal(b.toString(),"","Testing .toString() with id permutation")}),test("cycleToList()",2,function(){var a=[[0,1,2],[3,4]],b=[[0,1],[2,3]];deepEqual(MathLib.permutation.cycleToList(a),[1,2,0,4,3],"Testing .cycleToList()"),deepEqual(MathLib.permutation.cycleToList(b),[1,0,3,2],"Testing .cycleToList()")}),test("listToCycle()",1,function(){var a=[1,2,0,4,3];deepEqual(MathLib.permutation.listToCycle(a),[[0,1,2],[3,4]],"Testing .listToCycle()")}),module("Point"),test("init",1,function(){var a=MathLib.point([3,2,1]);equal(a.dim,2,"Testing the dimension")}),test(".constructor",1,function(){var a=MathLib.point([3,2,1]);equal(a.constructor,MathLib.point,"Testing .constructor")}),test(".type",1,function(){var a=MathLib.point([3,2,1]);equal(a.type,"point","Testing .type")}),test(".isEqual()",3,function(){var a=MathLib.point([3,2,1]),b=MathLib.point([6,4,2]),c=MathLib.point([1,1,1]),d=MathLib.point([1,1,1,1]);equal(a.isEqual(b),!0,".isEqual()"),equal(a.isEqual(c),!1,".isEqual()"),equal(c.isEqual(d),!1,".isEqual()")}),test(".isFinite()",2,function(){var a=MathLib.point([3,2,1]),b=MathLib.point([6,4,0]);equal(a.isFinite(),!0,".isFinite()"),equal(b.isFinite(),!1,".isFinite()")}),test(".isInside()",3,function(){var a=MathLib.point([1,0,1]),b=MathLib.point([2,0,1]),c=MathLib.point([3,0,1]),d=MathLib.circle(MathLib.point([0,0,1]),2);equal(a.isInside(d),!0,".isInside()"),equal(b.isInside(d),!1,".isInside()"),equal(c.isInside(d),!1,".isInside()")}),test(".isOn()",3,function(){var a=MathLib.point([1,0,1]),b=MathLib.point([2,0,1]),c=MathLib.point([3,0,1]),d=MathLib.circle(MathLib.point([0,0,1]),2);equal(a.isOn(d),!1,".isOn()"),equal(b.isOn(d),!0,".isOn()"),equal(c.isOn(d),!1,".isOn()")}),test(".isOutside()",3,function(){var a=MathLib.point([1,0,1]),b=MathLib.point([2,0,1]),c=MathLib.point([3,0,1]),d=MathLib.circle(MathLib.point([0,0,1]),2);equal(a.isOutside(d),!1,".isOutside()"),equal(b.isOutside(d),!1,".isOutside()"),equal(c.isOutside(d),!0,".isOutside()")}),test(".map()",2,function(){var a=MathLib.point([1,2,3]),b=MathLib.point([2,4,6]),c=function(a){return 2*a},d=a.map(c);deepEqual(d,b,".map()"),equal(d.type,"point",".type should be point")}),test(".reflectAt()",1,function(){var a=MathLib.point([0,0,1]),b=MathLib.point([1,2,1]),c=MathLib.point([2,4,1]);deepEqual(a.reflectAt(b),c,".reflectAt()")}),test(".toLaTeX()",2,function(){var a=MathLib.point([3,2,1]);equal(a.toLaTeX(),"\\begin{pmatrix}3\\\\2\\end{pmatrix}",".toLaTeX()"),equal(a.toLaTeX(!0),"\\begin{pmatrix}3\\\\2\\\\1\\end{pmatrix}",".toLaTeX()")}),test(".toMathMLString()",2,function(){var a=MathLib.point([3,2,1]);equal(a.toMathMLString(),"<mrow><mo>(</mo><mtable><mtr><mtd><mn>3</mn></mtd></mtr><mtr><mtd><mn>2</mn></mtd></mtr></mtable><mo>)</mo></mrow>",".toMathMLString()"),equal(a.toMathMLString(!0),"<mrow><mo>(</mo><mtable><mtr><mtd><mn>3</mn></mtd></mtr><mtr><mtd><mn>2</mn></mtd></mtr><mtr><mtd><mn>1</mn></mtd></mtr></mtable><mo>)</mo></mrow>",".toMathMLString()")}),test(".toString()",2,function(){var a=MathLib.point([3,2,1]);equal(a.toString(),"(3, 2)",".toString()"),equal(a.toString(!0),"(3, 2, 1)",".toString()")}),module("Polynomial"),test("init",2,function(){var a=MathLib.polynomial([1,2,3,4]),b=MathLib.polynomial([1,-4,MathLib.complex([2,3])]);deepEqual(a,[1,2,3,4],".coef"),deepEqual(b[2],MathLib.complex([2,3]),".coef")}),test(".coef",1,function(){var a=MathLib.polynomial(3);deepEqual(a,[0,0,0,1],".coef")}),test(".constructor",1,function(){var a=MathLib.polynomial([1,2,3]);equal(a.constructor,MathLib.polynomial,"Testing .constructor")}),test(".deg",1,function(){var a=MathLib.polynomial(3);equal(a.deg,3,"testing if .degree is right")}),test(".type",1,function(){var a=MathLib.polynomial([1,2,3]);equal(a.type,"polynomial","Testing .type")}),test(".differentiate()",3,function(){var a=MathLib.polynomial(3);deepEqual(a.differentiate(),[0,0,3],".differentiate()"),deepEqual(a.differentiate(2),[0,6],".differentiate(2)"),deepEqual(a.differentiate(4),[0],".differentiate(4)")}),test(".integrate()",2,function(){var a=MathLib.polynomial([0,0,0,1]);deepEqual(a.integrate(),[0,0,0,0,.25],".integrate()"),deepEqual(a.integrate(2),[0,0,0,0,0,.05],".integrate(2)")}),test(".isEqual()",1,function(){var a=MathLib.complex([0,0]),b=MathLib.polynomial(3),c=MathLib.polynomial([a,0,0,1]);equal(c.isEqual(b),!0,".times(polynomial)")}),test(".map()",2,function(){var a=MathLib.polynomial([1,2,3]),b=MathLib.polynomial([2,4,6]),c=function(a){return 2*a},d=a.map(c);deepEqual(d,b,".map()"),equal(d.type,"polynomial",".type should be polynomial")}),test(".mod()",1,function(){var a=MathLib.complex([5,6]),b=MathLib.complex([2,0]),c=MathLib.polynomial([3,a,-2,0,4,5]),d=MathLib.polynomial([0,b,1,0,1,2]);equal(c.mod(3).isEqual(d),!0,".mod()")}),test(".plus()",4,function(){var a=MathLib.polynomial(3),b=MathLib.polynomial([1,2,3]);deepEqual(b.plus(12),[13,2,3],".plus(integer)"),deepEqual(b.plus(12,!0),[13,14,15],".plus(integer, true)"),deepEqual(a.plus(b),[1,2,3,1],".plus(polynomial)"),deepEqual(b.plus(a),[1,2,3,1],".plus(polynomial)")}),test(".times()",3,function(){var a=MathLib.polynomial(3),b=MathLib.polynomial([1,2,3]);deepEqual(b.times(5),[5,10,15],".times(integer)"),deepEqual(a.times(b),[0,0,0,1,2,3],".times(polynomial)"),deepEqual(b.times(a),[0,0,0,1,2,3],".times(polynomial)")}),test(".toContentMathMLString()",2,function(){var a=MathLib.polynomial([1,2,3]),b=MathLib.polynomial([-1,0,1]);deepEqual(a.toContentMathMLString(),"<apply><plus/><apply><times/><cn>3</cn><apply><power/><ci>x</ci><cn>2</cn></apply></apply><apply><times/><cn>2</cn><ci>x</ci></apply><cn>1</cn></apply>",".toContentMathMLString()"),deepEqual(b.toContentMathMLString(),"<apply><plus/><apply><times/><cn>1</cn><apply><power/><ci>x</ci><cn>2</cn></apply></apply><cn>-1</cn></apply>",".toContentMathMLString()")}),test(".toFunctn()",3,function(){var a=MathLib.polynomial([1,2,3]),b=a.toFunctn(),c=MathLib.sin(b);equal(b.type,"functn",".type should be functn"),equal(c.toString(),"sin(3*x^2+2*x+1)","composition with other functions"),equal(b(42),5377,"fuctn evaluation")}),test(".toLaTeX()",2,function(){var a=MathLib.polynomial([1,2,3]),b=MathLib.polynomial([-1,0,1]);deepEqual(a.toLaTeX(),"3*x^{2}+2x+1",".toLaTeX()"),deepEqual(b.toLaTeX(),"1*x^{2}-1",".toLaTeX()")}),test(".toMathMLString()",2,function(){var a=MathLib.polynomial([1,2,3]),b=MathLib.polynomial([-1,0,1]);deepEqual(a.toMathMLString(),"<mrow><mo>+</mo><mn>3</mn><mo>&#x2062;</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>2</mn><mo>&#x2062;</mo><mi>x</mi><mo>+</mo><mn>1</mn></mrow>",".toMathMLString()"),deepEqual(b.toMathMLString(),"<mrow><mo>+</mo><mn>1</mn><mo>&#x2062;</mo><msup><mi>x</mi><mn>2</mn></msup><mo>-</mo><mn>1</mn></mrow>",".toMathMLString()")}),test(".toString()",2,function(){var a=MathLib.polynomial([1,2,3]),b=MathLib.polynomial([-1,0,1]);deepEqual(a.toString(),"3*x^2+2*x+1",".toString()"),deepEqual(b.toString(),"1*x^2-1",".toString()")}),test(".valueAt()",6,function(){var a=MathLib.polynomial(3),b=MathLib.polynomial([1,2,3]),c=MathLib.polynomial([1,-4,MathLib.complex([4,-1])]),d=MathLib.matrix([[1,0,1],[2,2,1],[4,2,1]]),e=MathLib.polynomial([4,-1,-4,1]);equal(a.valueAt(4),64,".valueAt()"),equal(b.valueAt(2),17,".valueAt()"),deepEqual(b.valueAt(MathLib.complex([2,3])).z,[-10,42],".valueAt()"),deepEqual(c.valueAt(2).z,[9,-4],".valueAt()"),deepEqual(c.valueAt(MathLib.complex([2,3])).z,[-15,41],".valueAt()"),equal(e.valueAt(d).isZero(),!0,"Cayley–Hamilton theorem")}),test("one()",1,function(){var a=MathLib.polynomial.one;deepEqual(a,MathLib.polynomial([1]),"Testing .one")}),test("zero()",1,function(){var a=MathLib.polynomial.zero;deepEqual(a,MathLib.polynomial([0]),"Testing .zero")}),module("Set"),test("init",4,function(){var a=MathLib.set([3,3,4,9,2,8,2]),b=MathLib.set([3,3,4,9,2,8,2],!0);equal(a.card,5,"Testing the cardinality"),equal(a.multiset,!1,"Testing .multiset"),equal(b.card,7,"Testing the cardinality"),equal(b.multiset,!0,"Testing .multiset")}),test(".constructor",1,function(){var a=MathLib.set([1,2,3,4]);equal(a.constructor,MathLib.set,"Testing .constructor")}),test(".type",1,function(){var a=MathLib.set([1,2,3,4]);equal(a.type,"set","Testing .type")}),test(".arithMean()",2,function(){var a=MathLib.set([3,3,4,9,2,8,2]),b=MathLib.set([3,3,4,9,2,8,2],!0);equal(a.arithMean(),5.2,"Testing .arithMean() (set)"),equal(b.arithMean(),31/7,"Testing .arithMean() (multiset)")}),test(".compare()",3,function(){var a=MathLib.set([1,2,3,4]),b=MathLib.set([1,3,5,7]),c=MathLib.set([1,2,3,4,5]);deepEqual(a.compare(a),0,".compare()"),deepEqual(a.compare(b),-1,".compare()"),deepEqual(b.compare(c),-1,".compare()")}),test(".geoMean()",2,function(){var a=MathLib.set([3,3,4,9,2,8,2]),b=MathLib.set([3,3,4,9,2,8,2],!0);equal(a.geoMean(),Math.pow(1728,.2),"Testing .geoMean() (set)"),equal(b.geoMean(),Math.pow(10368,1/7),"Testing .geoMean() (multiset)")}),test(".harmonicMean()",2,function(){var a=MathLib.set([3,3,4,9,2,8,2]),b=MathLib.set([3,3,4,9,2,8,2],!0);equal(a.harmonicMean(),3.7894736842105265,"Testing .geoMean() (set)"),equal(b.harmonicMean(),3.2516129032258068,"Testing .geoMean() (multiset)")}),test(".insert()",8,function(){var a=MathLib.set([3,3,4,9,2,8,2]),b=MathLib.set([3,3,4,9,2,8,2],!0);deepEqual(a.insert(1),[1,2,3,4,8,9],"Testing .locate() (set, front)"),deepEqual(a.insert(3),[1,2,3,4,8,9],"Testing .locate() (set, existing)"),deepEqual(a.insert(5),[1,2,3,4,5,8,9],"Testing .locate() (set, not existing)"),deepEqual(a.insert(10),[1,2,3,4,5,8,9,10],"Testing .locate() (set, back)"),deepEqual(b.insert(1),[1,2,2,3,3,4,8,9],"Testing .locate() (multiset, front)"),deepEqual(b.insert(3),[1,2,2,3,3,3,4,8,9],"Testing .locate() (multiset, existing)"),deepEqual(b.insert(5),[1,2,2,3,3,3,4,5,8,9],"Testing .locate() (multiset, not existing)"),deepEqual(b.insert(10),[1,2,2,3,3,3,4,5,8,9,10],"Testing .locate() (multiset, back)")}),test(".intersect()",1,function(){var a=MathLib.set([1,2,3,4]),b=MathLib.set([1,3,5,7]);deepEqual(a.intersect(b),[1,3],"Testing .intersect() (set)")}),test(".isEmpty()",3,function(){var a=MathLib.set([3,3,4,9,2,8,2]),b=MathLib.set(),c=MathLib.set([]);equal(a.isEmpty(),!1,"Testing .min()"),equal(b.isEmpty(),!0,"Testing .min(3)"),equal(c.isEmpty(),!0,"Testing .min(3)")}),test(".isEqual()",3,function(){var a=MathLib.set([1,2,3,4]),b=MathLib.set([1,3,5,7]),c=MathLib.set([1,2,MathLib.complex([3,0]),4]);deepEqual(a.isEqual(a),!0,".isEqual()"),deepEqual(a.isEqual(b),!1,".isEqual()"),deepEqual(a.isEqual(c),!1,".isEqual()")}),test(".isSubsetOf()",2,function(){var a=MathLib.set([3,3,4,9,2,8,2]),b=MathLib.set([3,8,2]),c=MathLib.set([5,8,2]);equal(b.isSubsetOf(a),!0,"Testing .isSubsetOf()"),equal(c.isSubsetOf(a),!1,"Testing .isSubsetOf()")}),test(".locate()",4,function(){var a=MathLib.set([3,3,4,9,2,8,2]);equal(a.locate(1),0,"Testing .locate()"),equal(a.locate(3),1,"Testing .locate()"),equal(a.locate(5),3,"Testing .locate()"),equal(a.locate(10),5,"Testing .locate()")}),test(".map()",2,function(){var a=MathLib.set([1,2,3]),b=MathLib.set([2,4,6]),c=function(a){return 2*a},d=a.map(c);deepEqual(d,b,".map()"),equal(d.type,"set",".type should be set")}),test(".max()",4,function(){var a=MathLib.set([3,3,4,9,2,8,2]),b=MathLib.set([3,3,4,9,2,8,2],!0);equal(a.max(),9,"Testing .max() (set)"),equal(a.max(3),4,"Testing .max(3) (set)"),equal(b.max(),9,"Testing .max() (multiset)"),equal(b.max(3),4,"Testing .max(3) (multiset)")}),test(".min()",4,function(){var a=MathLib.set([3,3,4,9,2,8,2]),b=MathLib.set([3,3,4,9,2,8,2],!0);equal(a.min(),2,"Testing .min() (set)"),equal(a.min(3),4,"Testing .min(3) (set)"),equal(b.min(),2,"Testing .min() (multiset)"),equal(b.min(3),3,"Testing .min(3) (multiset)")}),test(".plus()",3,function(){var a=MathLib.set([1,2,3,4]),b=MathLib.set([1,2,3,4,5,6]);equal(a.plus(),10,"Testing .plus() (set)"),deepEqual(a.plus(2),[3,4,5,6],"Testing .plus(int) (set)"),deepEqual(a.plus(b),[2,3,4,5,6,7,8,9,10],"Testing .plus(set) (set)")}),test(".powerset()",1,function(){var a=MathLib.set,b=MathLib.set([1,2,3]),c=MathLib.set([a(),a([1]),a([2]),a([3]),a([1,2]),a([1,3]),a([2,3]),a([1,2,3])]);deepEqual(b.powerset(),c,".powerset()")}),test(".remove()",1,function(){var a=MathLib.set([3,3,4,9,2,8,2]);deepEqual(a.remove(3),[2,4,8,9],"Testing .toArray()")}),test(".times()",2,function(){var a=MathLib.set([1,2,3,4]);equal(a.times(),24,"Testing .times() (set)"),deepEqual(a.times(2),[2,4,6,8],"Testing .times(int) (set)")}),test(".toArray()",3,function(){var a=MathLib.set([3,3,4,9,2,8,2]),b=MathLib.set([3,3,4,9,2,8,2],!0),c=MathLib.set();deepEqual(a.toArray(),[2,3,4,8,9],"Testing .toArray() (set)"),deepEqual(b.toArray(),[2,2,3,3,4,8,9],"Testing .toArray() (multiset)"),deepEqual(c.toArray(),[],"Testing .toArray() (empty set)")}),test(".toContentMathMLString()",3,function(){var a=MathLib.set([3,3,4,9,2,8,2]),b=MathLib.set([3,3,4,9,2,8,2],!0),c=MathLib.set();equal(a.toContentMathMLString(),"<set><cn>2</cn><cn>3</cn><cn>4</cn><cn>8</cn><cn>9</cn></set>","Testing .toContentMathMLString() (set)"),equal(b.toContentMathMLString(),"<set><cn>2</cn><cn>2</cn><cn>3</cn><cn>3</cn><cn>4</cn><cn>8</cn><cn>9</cn></set>","Testing .toContentMathMLString() (multiset)"),equal(c.toContentMathMLString(),"<emptyset/>","Testing .toContentMathMLString() (empty set)")}),test(".toLaTeX()",3,function(){var a=MathLib.set([3,3,4,9,2,8,2]),b=MathLib.set([3,3,4,9,2,8,2],!0),c=MathLib.set();equal(a.toLaTeX(),"\\{2, 3, 4, 8, 9\\}","Testing .toLaTeX() (set)"),equal(b.toLaTeX(),"\\{2, 2, 3, 3, 4, 8, 9\\}","Testing .toLaTeX() (multiset)"),equal(c.toLaTeX(),"\\emptyset","Testing .toLaTeX() (empty set)")}),test(".toMathMLString()",3,function(){var a=MathLib.set([3,3,4,9,2,8,2]),b=MathLib.set([3,3,4,9,2,8,2],!0),c=MathLib.set();equal(a.toMathMLString(),"<mrow><mo>{</mo><mn>2</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>4</mn><mo>,</mo><mn>8</mn><mo>,</mo><mn>9</mn><mo>}</mo></mrow>","Testing .toMathMLString() (set)"),equal(b.toMathMLString(),"<mrow><mo>{</mo><mn>2</mn><mo>,</mo><mn>2</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>4</mn><mo>,</mo><mn>8</mn><mo>,</mo><mn>9</mn><mo>}</mo></mrow>","Testing .toMathMLString() (multiset)"),equal(c.toMathMLString(),"<mi>&#x2205;</mi>","Testing .toMathMLString() (empty set)")}),test(".toMultiset()",2,function(){var a=MathLib.set([3,3,4,9,2,8,2]),b=a.toMultiset();deepEqual(b.toArray(),[2,3,4,8,9],"Testing .toArray()"),equal(b.multiset,!0,"Testing .multiset")}),test(".toSet()",2,function(){var a=MathLib.set([3,3,4,9,2,8,2],!0),b=a.toSet();deepEqual(b.toArray(),[2,3,4,8,9],"Testing .toArray()"),equal(b.multiset,!1,"Testing .multiset")}),test(".toString()",3,function(){var a=MathLib.set([3,3,4,9,2,8,2]),b=MathLib.set(),c=MathLib.set([3,3,4,9,2,8,2],!0);equal(a.toString(),"(2, 3, 4, 8, 9)","Testing .toString() (set)"),equal(b.toString(),"∅","Testing .toString() (empty set)"),equal(c.toString(),"(2, 2, 3, 3, 4, 8, 9)","Testing .toString() (multiset)")}),test(".union()",1,function(){var a=MathLib.set([1,2,3,4]),b=MathLib.set([1,3,5,7]);deepEqual(a.union(b),[1,2,3,4,5,7],"Testing .union() (set)")}),test(".without()",1,function(){var a=MathLib.set([1,2,3,4]),b=MathLib.set([1,3,5,7]);deepEqual(a.without(b),[2,4],"Testing .without() (set)")}),test(".xor()",1,function(){var a=MathLib.set([1,2,3,4]),b=MathLib.set([1,3,5,7]);deepEqual(a.xor(b),[2,4,5,7],"Testing .xor() (set)")}),test("fromTo()",1,function(){deepEqual(MathLib.set.fromTo(1,5,2),[1,3,5],"Testing MathLib.set.fromTo()")}),module("Vector"),test("init",2,function(){var a=MathLib.vector([1,2,3]);equal(a.length,3,"Testing the dimension"),deepEqual(a,[1,2,3],"checking the entries")}),test(".constructor",1,function(){var a=MathLib.vector([1,2,3]);equal(a.constructor,MathLib.vector,"Testing .constructor")}),test(".type",1,function(){var a=MathLib.vector([1,2,3]);equal(a.type,"vector","Testing .type")}),test(".isEqual()",3,function(){var a=MathLib.vector([0,1,2]),b=MathLib.vector([0,1,2]),c=MathLib.vector([0,0,0]),d=MathLib.vector([0,0,0,0]);equal(a.isEqual(b),!0,".isEqual()"),equal(a.isEqual(c),!1,".isEqual()"),equal(c.isEqual(d),!1,".isEqual()")}),test(".isZero()",2,function(){var a=MathLib.vector([0,0,0]),b=MathLib.vector([0,0,1]);equal(a.isZero(),!0,".isZero()"),equal(b.isZero(),!1,".isZero()")}),test(".map()",2,function(){var a=MathLib.vector([1,2,3]),b=MathLib.vector([2,4,6]),c=function(a){return 2*a},d=a.map(c);deepEqual(d,b,".map()"),equal(d.type,"vector",".type should be vector")}),test(".minus()",1,function(){var a=MathLib.vector([3,1,4]),b=MathLib.vector([1,5,9]);equal(a.minus(b).isEqual(MathLib.vector([2,-4,-5])),!0,".minus()")}),test(".neagtive()",1,function(){var a=MathLib.vector([3,1,4]);equal(a.negative().isEqual(MathLib.vector([-3,-1,-4])),!0,".negative()")}),test(".normalize()",1,function(){var a=MathLib.vector([2,3,6]);equal(a.normalize().isEqual(MathLib.vector([2/7,3/7,6/7])),!0,".normalize()")}),test(".outerProduct()",1,function(){var a=MathLib.vector([3,1,4]),b=MathLib.vector([1,5,9]);equal(a.outerProduct(b).isEqual(MathLib.matrix([[3,15,27],[1,5,9],[4,20,36]])),!0,".outerProduct()")}),test(".plus()",1,function(){var a=MathLib.vector([3,1,4]),b=MathLib.vector([1,5,9]);equal(a.plus(b).isEqual(MathLib.vector([4,6,13])),!0,".plus()")}),test(".scalarProduct()",1,function(){var a=MathLib.vector([3,1,4]),b=MathLib.vector([1,5,9]);equal(a.scalarProduct(b),44,".scalarProduct()")}),test(".size()",1,function(){var a=MathLib.vector([1,2,2]);equal(a.size(),3,".size()")}),test(".times()",2,function(){var a=MathLib.vector([1,2,3]),b=MathLib.matrix([[1,2,3],[4,5,6],[7,8,9]]);deepEqual(a.times(3),MathLib.vector([3,6,9]),".times(number)"),deepEqual(a.times(b),MathLib.vector([30,36,42]),".times(matrix)")}),test(".toArray()",1,function(){var a=MathLib.vector([1,2,3]);equal(MathLib.type(a.toArray()),"array",".toArray()")}),test(".toContentMathMLString()",1,function(){var a=MathLib.vector([1,2,3]);equal(a.toContentMathMLString(),"<vector><cn>1</cn><cn>2</cn><cn>3</cn></vector>",".toContentMathML()String")}),test(".toLaTeX()",1,function(){var a=MathLib.vector([1,2,3]);equal(a.toLaTeX(),"\\begin{pmatrix}\n\t1\\\\\n\t2\\\\\n\t3\n\\end{pmatrix}")}),test(".toMathMLString()",1,function(){var a=MathLib.vector([1,2,3]);equal(a.toMathMLString(),"<mrow><mo>(</mo><mtable><mtr><mtd><mn>1</mn></mtd></mtr><mtr><mtd><mn>2</mn></mtd></mtr><mtr><mtd><mn>3</mn></mtd></mtr></mtable><mo>)</mo></mrow>",".toMathMLString()")}),test(".toString()",1,function(){var a=MathLib.vector([1,2,3]);equal(a.toString(),"(1, 2, 3)",".toString()")}),test(".vectorproduct()",1,function(){var a=MathLib.vector([1,2,3]),b=MathLib.vector([-7,8,9]);deepEqual(a.vectorproduct(b),[-6,-30,22],".vectorProduct()")}),test("zero()",1,function(){var a=MathLib.vector.zero(3);equal(a.isZero(),!0,"testing zero vector")});